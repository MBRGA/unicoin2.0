{
  "contractName": "LicenceManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "licenceOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "licences",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owner_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "publication_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "publicationLicenceNo",
          "type": "uint256"
        },
        {
          "internalType": "enum LicenceManager.LicenceStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "publicationLicences",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_unicoinRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_owner_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publication_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicationLicenceNo",
          "type": "uint256"
        }
      ],
      "name": "registerNewLicence",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licence_Id",
          "type": "uint256"
        }
      ],
      "name": "revokeLicence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_user_Id",
          "type": "uint256"
        }
      ],
      "name": "getLicenceForUser",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licence_Id",
          "type": "uint256"
        }
      ],
      "name": "getLicence",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_publication_Id",
          "type": "uint256"
        }
      ],
      "name": "getPublicationLicences",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licence_Id\",\"type\":\"uint256\"}],\"name\":\"getLicence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_user_Id\",\"type\":\"uint256\"}],\"name\":\"getLicenceForUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_publication_Id\",\"type\":\"uint256\"}],\"name\":\"getPublicationLicences\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_unicoinRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"licenceOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"licences\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"owner_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publication_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicationLicenceNo\",\"type\":\"uint256\"},{\"internalType\":\"enum LicenceManager.LicenceStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"publicationLicences\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_owner_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publication_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicationLicenceNo\",\"type\":\"uint256\"}],\"name\":\"registerNewLicence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licence_Id\",\"type\":\"uint256\"}],\"name\":\"revokeLicence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function.\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeMint(address,uint256)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeMint(address,uint256,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol\":\"LicenceManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol\":{\"keccak256\":\"0x79c552b22155290517ed540a21996d4ffdb58760a2b3e14c5fffda884ea1529b\",\"urls\":[\"bzz-raw://9571e1835842543e54664e9225cf7f1ae9519cc22b18cb83f1206661d72f4acd\",\"dweb:/ipfs/QmZCtb4igkc3TJjvJdXK64GCSy1M4AnThZeFyrUmxP1V2F\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcc02740f27fa64fcd3237e531390e7091c0d1a597c1e3c315412e6edfcb56e98\",\"urls\":[\"bzz-raw://435140748ea8a6aef64fb8be8e92547bc73b55715487959f8a38cae981c3be5b\",\"dweb:/ipfs/QmWzaYxa7Bvpb8AifSw3Au6hB2VdevwL66xyzr6objJoqs\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x46b471beac241540af38bf756c5c15b1662ede1c6826bdbda1865daa975e17e2\",\"urls\":[\"bzz-raw://284575184b15dc9e8f2d5b5fe0af433348ab272f35715d63b78e9824e735f200\",\"dweb:/ipfs/QmfRwqexUjB4bBtmxsYBQa631jLAVPBgjoXUcGRrh3d7iA\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xab7e889faecf8ec36150e7a3837819cb30c46a46f53eaac72ac1f8e1d824d150\",\"urls\":[\"bzz-raw://b2e7ae9ad2df0fd4d1916d8c5af0f9df214a8986ad7fa49cf656affbd5778cf5\",\"dweb:/ipfs/QmXScSEGENRaqaq95SqtQUDG1UXNi58fB8USMRM5HqwMqb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x05716424b99aa883c7dd4eb4c32cd75a19c9fdfddaede038dd5fb1da2377e21e\",\"urls\":[\"bzz-raw://1f34d0a534e323b399b66cd212b3caafb7d257398999eacb6153a7850931f0c7\",\"dweb:/ipfs/QmcpNsTGmbGyGM8SvbusKbCW4FWQSka3u3rxVLY1bAwajq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0x907766c86fad66a29fb7a3c8828f484b19c05cac392d924ff9125ddda86f7192\",\"urls\":[\"bzz-raw://71e1c3f4f08d2453d4efd60df31aca2d92395de8132af5cf7933ae0f53224fee\",\"dweb:/ipfs/QmXw3z7VeSMcttKeH5uC5CZ9as45AufWJS4kYyPWkojGzV\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzz-raw://5f003d160f9b7a296d724fd58e3ef545dab049536d089d0e5af4c9984db55a7e\",\"dweb:/ipfs/QmaZHGFYVa89vvjHq7uxQhg3P5vaAhY323VYEpuuma4us2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf83b0e3cfc9d22e6ab413d8881a7e55384a9ebfd1d78ab8b9ce4f0cb6ee2fcf8\",\"urls\":[\"bzz-raw://e618ab3e1bb35d7f98c80213b5c0d563c3d47ecf9bf701b0cce3b1bcbefe815a\",\"dweb:/ipfs/QmeRYHm9BZ67gM4QCdrN3mecRAbVMrB3pRoo26jwoZWvdr\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x60806040526144c9806100136000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638832e6e31161011a578063af5485a8116100ad578063c87b56dd1161007c578063c87b56dd14610f59578063d628d54014611000578063e985e9c51461104c578063f8ede44a146110c8578063fbd9d2eb1461111457610206565b8063af5485a814610d35578063b88d4fde14610dab578063bb44aee314610eb0578063c4d66de814610f1557610206565b806398650275116100e95780639865027514610c19578063a144819414610c23578063a22cb46514610c89578063aa271e1a14610cd957610206565b80638832e6e3146109d257806395d89b4114610acf5780639787bb4114610b52578063983b2d5614610bd557610206565b80632f745c591161019d5780634cd88b761161016c5780634cd88b761461076e5780634f6ccce7146108c05780636352211e1461090257806370a08231146109705780638129fc1c146109c857610206565b80632f745c591461060a5780633a7ae75d1461066c57806340c10f191461069a57806342842e0e1461070057610206565b8063095ea7b3116101d9578063095ea7b3146104d357806318160ddd1461052157806323b872dd1461053f5780632cedebee146105ad57610206565b806301ffc9a71461020b57806306fdde0314610270578063077f224a146102f3578063081812fc14610465575b600080fd5b6102566004803603602081101561022157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b6102786111ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b857808201518184015260208101905061029d565b50505050905090810190601f1680156102e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104636004803603606081101561030957600080fd5b810190808035906020019064010000000081111561032657600080fd5b82018360208201111561033857600080fd5b8035906020019184600183028401116401000000008311171561035a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103bd57600080fd5b8201836020820111156103cf57600080fd5b803590602001918460018302840111640100000000831117156103f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a1565b005b6104916004803603602081101561047b57600080fd5b81019080803590602001909291905050506114b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051f600480360360408110156104e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061154b565b005b610529611732565b6040518082815260200191505060405180910390f35b6105ab6004803603606081101561055557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061173f565b005b6105d9600480360360208110156105c357600080fd5b81019080803590602001909291905050506117b5565b604051808581526020018481526020018381526020018260ff1660ff16815260200194505050505060405180910390f35b6106566004803603604081101561062057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118dc565b6040518082815260200191505060405180910390f35b6106986004803603602081101561068257600080fd5b810190808035906020019092919050505061199b565b005b6106e6600480360360408110156106b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611aa3565b604051808215151515815260200191505060405180910390f35b61076c6004803603606081101561071657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b1e565b005b6108be6004803603604081101561078457600080fd5b81019080803590602001906401000000008111156107a157600080fd5b8201836020820111156107b357600080fd5b803590602001918460018302840111640100000000831117156107d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561083857600080fd5b82018360208201111561084a57600080fd5b8035906020019184600183028401116401000000008311171561086c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b3e565b005b6108ec600480360360208110156108d657600080fd5b8101908080359060200190929190505050611c8e565b6040518082815260200191505060405180910390f35b61092e6004803603602081101561091857600080fd5b8101908080359060200190929190505050611d0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109b26004803603602081101561098657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dd6565b6040518082815260200191505060405180910390f35b6109d0611eab565b005b610ab5600480360360608110156109e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a2f57600080fd5b820183602082011115610a4157600080fd5b80359060200191846001830284011164010000000083111715610a6357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611fcb565b604051808215151515815260200191505060405180910390f35b610ad7612048565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b17578082015181840152602081019050610afc565b50505050905090810190601f168015610b445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b7e60048036036020811015610b6857600080fd5b81019080803590602001909291905050506120ea565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bc1578082015181840152602081019050610ba6565b505050509050019250505060405180910390f35b610c1760048036036020811015610beb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612156565b005b610c216121c7565b005b610c6f60048036036040811015610c3957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506121d9565b604051808215151515815260200191505060405180910390f35b610cd760048036036040811015610c9f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612254565b005b610d1b60048036036020811015610cef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061240c565b604051808215151515815260200191505060405180910390f35b610d9560048036036080811015610d4b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061242a565b6040518082815260200191505060405180910390f35b610eae60048036036080811015610dc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e2857600080fd5b820183602082011115610e3a57600080fd5b80359060200191846001830284011164010000000083111715610e5c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506126ab565b005b610edc60048036036020811015610ec657600080fd5b8101908080359060200190929190505050612723565b60405180858152602001848152602001838152602001826001811115610efe57fe5b60ff16815260200194505050505060405180910390f35b610f5760048036036020811015610f2b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061276e565b005b610f8560048036036020811015610f6f57600080fd5b8101908080359060200190929190505050612888565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fc5578082015181840152602081019050610faa565b50505050905090810190601f168015610ff25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6110366004803603604081101561101657600080fd5b81019080803590602001909291908035906020019092919050505061299b565b6040518082815260200191505060405180910390f35b6110ae6004803603604081101561106257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129ca565b604051808215151515815260200191505060405180910390f35b6110fe600480360360408110156110de57600080fd5b810190808035906020019092919080359060200190929190505050612a5e565b6040518082815260200191505060405180910390f35b6111406004803603602081101561112a57600080fd5b8101908080359060200190929190505050612a8d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611183578082015181840152602081019050611168565b505050509050019250505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112975780601f1061126c57610100808354040283529160200191611297565b820191906000526020600020905b81548152906001019060200180831161127a57829003601f168201915b5050505050905090565b600060019054906101000a900460ff16806112c057506112bf612af9565b5b806112d757506000809054906101000a900460ff16155b61132c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561137c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611384612b0a565b61138c611eab565b6113968484611b3e565b61139f8261276e565b816101a160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061019e60405180608001604052806000815260200160008152602001600081526020016000600181111561141157fe5b8152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600181111561148157fe5b021790555050505080156114aa5760008060016101000a81548160ff0219169083151502179055505b50505050565b60006114bb82612c21565b611510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614343602c913960400191505060405180910390fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061155682611d0e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144176021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166115fc612c93565b73ffffffffffffffffffffffffffffffffffffffff16148061162b575061162a81611625612c93565b6129ca565b5b611680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806142676038913960400191505060405180910390fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000609e80549050905090565b61175061174a612c93565b82612c9b565b6117a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806144386031913960400191505060405180910390fd5b6117b0838383612d8f565b505050565b60008060008060008511611831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5a65726f7468206c6963656e6365206973206e6f742076616c6964000000000081525060200191505060405180910390fd5b6118396140b5565b61019e868154811061184757fe5b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16600181111561189c57fe5b60018111156118a757fe5b815250509050806000015181602001518260400151836060015160018111156118cc57fe5b9450945094509450509193509193565b60006118e783611dd6565b821061193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806141ba602b913960400191505060405180910390fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061198857fe5b9060005260206000200154905092915050565b6101a160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e206f6e6c792062652063616c6c6564206279207265676973747279000081525060200191505060405180910390fd5b600161019e8281548110611a6f57fe5b906000526020600020906004020160030160006101000a81548160ff02191690836001811115611a9b57fe5b021790555050565b6000611ab5611ab0612c93565b61240c565b611b0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b611b148383612db3565b6001905092915050565b611b39838383604051806020016040528060008152506126ab565b505050565b600060019054906101000a900460ff1680611b5d5750611b5c612af9565b5b80611b7457506000809054906101000a900460ff16155b611bc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611c19576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611c21612dd4565b611c2a57600080fd5b8260d29080519060200190611c409291906140e8565b508160d39080519060200190611c579291906140e8565b50611c68635b5e139f60e01b612deb565b8015611c895760008060016101000a81548160ff0219169083151502179055505b505050565b6000611c98611732565b8210611cef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614469602c913960400191505060405180910390fd5b609e8281548110611cfc57fe5b90600052602060002001549050919050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611dcd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806142c96029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061429f602a913960400191505060405180910390fd5b611ea4606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ef4565b9050919050565b600060019054906101000a900460ff1680611eca5750611ec9612af9565b5b80611ee157506000809054906101000a900460ff16155b611f36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611f86576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611f8e612dd4565b611f9757600080fd5b611fa763780e9d6360e01b612deb565b8015611fc85760008060016101000a81548160ff0219169083151502179055505b50565b6000611fdd611fd8612c93565b61240c565b612032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b61203d848484612f02565b600190509392505050565b606060d38054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120e05780601f106120b5576101008083540402835291602001916120e0565b820191906000526020600020905b8154815290600101906020018083116120c357829003601f168201915b5050505050905090565b606061019f600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561214a57602002820191906000526020600020905b815481526020019060010190808311612136575b50505050509050919050565b612166612161612c93565b61240c565b6121bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b6121c481612f73565b50565b6121d76121d2612c93565b612fce565b565b60006121eb6121e6612c93565b61240c565b612240576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b61224a8383613029565b6001905092915050565b61225c612c93565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806069600061230a612c93565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166123b7612c93565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006124238261013961304790919063ffffffff16565b9050919050565b60006101a160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146124f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e206f6e6c792062652063616c6c6564206279207265676973747279000081525060200191505060405180910390fd5b6124f86140b5565b60405180608001604052808681526020018581526020018481526020016000600181111561252257fe5b81525090506000600161019e839080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600181111561259c57fe5b0217905550505003905061019f60008781526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506101a0600086815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061262c8782611aa3565b61269e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4c6963656e6365206d696e74696e67206661696c65640000000000000000000081525060200191505060405180910390fd5b8092505050949350505050565b6126bc6126b6612c93565b83612c9b565b612711576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806144386031913960400191505060405180910390fd5b61271d84848484613125565b50505050565b61019e818154811061273157fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b600060019054906101000a900460ff168061278d575061278c612af9565b5b806127a457506000809054906101000a900460ff16155b6127f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612849576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612851612dd4565b61285a57600080fd5b61286382613197565b80156128845760008060016101000a81548160ff0219169083151502179055505b5050565b606061289382612c21565b6128e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806143e8602f913960400191505060405180910390fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561298f5780601f106129645761010080835404028352916020019161298f565b820191906000526020600020905b81548152906001019060200180831161297257829003601f168201915b50505050509050919050565b6101a060205281600052604060002081815481106129b557fe5b90600052602060002001600091509150505481565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61019f6020528160005260406000208181548110612a7857fe5b90600052602060002001600091509150505481565b60606101a06000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612aed57602002820191906000526020600020905b815481526020019060010190808311612ad9575b50505050509050919050565b600080303b90506000811491505090565b600060019054906101000a900460ff1680612b295750612b28612af9565b5b80612b4057506000809054906101000a900460ff16155b612b95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612be5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612bed6132ae565b612bfd6380ac58cd60e01b612deb565b8015612c1e5760008060016101000a81548160ff0219169083151502179055505b50565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000612ca682612c21565b612cfb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061423b602c913960400191505060405180910390fd5b6000612d0683611d0e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d7557508373ffffffffffffffffffffffffffffffffffffffff16612d5d846114b0565b73ffffffffffffffffffffffffffffffffffffffff16145b80612d865750612d8581856129ca565b5b91505092915050565b612d9a8383836133bd565b612da48382613618565b612dae82826137b6565b505050565b612dbd828261387d565b612dc782826137b6565b612dd081613a95565b5050565b6000612de66380ac58cd60e01b611197565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415612e87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081600001549050919050565b612f0c8383612db3565b612f196000848484613ae1565b612f6e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806141e56032913960400191505060405180910390fd5b505050565b612f8881610139613cd190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b612fe381610139613dac90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b613043828260405180602001604052806000815250612f02565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156130ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061436f6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613130848484612d8f565b61313c84848484613ae1565b613191576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806141e56032913960400191505060405180910390fd5b50505050565b600060019054906101000a900460ff16806131b657506131b5612af9565b5b806131cd57506000809054906101000a900460ff16155b613222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613272576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61327b8261240c565b6132895761328882612f73565b5b80156132aa5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff16806132cd57506132cc612af9565b5b806132e457506000809054906101000a900460ff16155b613339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613389576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6133996301ffc9a760e01b612deb565b80156133ba5760008060016101000a81548160ff0219169083151502179055505b50565b8273ffffffffffffffffffffffffffffffffffffffff166133dd82611d0e565b73ffffffffffffffffffffffffffffffffffffffff1614613449576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806143bf6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156134cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806142176024913960400191505060405180910390fd5b6134d881613e69565b61351f606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f27565b613566606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f4a565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006136706001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613f6090919063ffffffff16565b90506000609d600084815260200190815260200160002054905081811461375d576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106136dd57fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061373557fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036137af9190614168565b5050505050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613920576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61392981612c21565b1561399c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a35606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f4a565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6000613b028473ffffffffffffffffffffffffffffffffffffffff16613faa565b613b0f5760019050613cc9565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02613b35612c93565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613bf1578082015181840152602081019050613bd6565b50505050905090810190601f168015613c1e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613c4057600080fd5b505af1158015613c54573d6000803e3d6000fd5b505050506040513d6020811015613c6a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b613cdb8282613047565b15613d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613db68282613047565b613e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806143226021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613f245760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613f3f60018260000154613f6090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613fa283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613ff5565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015613fec5750808214155b92505050919050565b60008383111582906140a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561406757808201518184015260208101905061404c565b50505050905090810190601f1680156140945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060800160405280600081526020016000815260200160008152602001600060018111156140e257fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061412957805160ff1916838001178555614157565b82800160010185558215614157579182015b8281111561415657825182559160200191906001019061413b565b5b5090506141649190614194565b5090565b81548183558181111561418f5781836000526020600020918201910161418e9190614194565b5b505050565b6141b691905b808211156141b257600081600090555060010161419a565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a723158204e9b9f4494142b37138c034c015d3f66ef6997feb51385030ee6d8b1432bb6ad64736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c80638832e6e31161011a578063af5485a8116100ad578063c87b56dd1161007c578063c87b56dd14610f59578063d628d54014611000578063e985e9c51461104c578063f8ede44a146110c8578063fbd9d2eb1461111457610206565b8063af5485a814610d35578063b88d4fde14610dab578063bb44aee314610eb0578063c4d66de814610f1557610206565b806398650275116100e95780639865027514610c19578063a144819414610c23578063a22cb46514610c89578063aa271e1a14610cd957610206565b80638832e6e3146109d257806395d89b4114610acf5780639787bb4114610b52578063983b2d5614610bd557610206565b80632f745c591161019d5780634cd88b761161016c5780634cd88b761461076e5780634f6ccce7146108c05780636352211e1461090257806370a08231146109705780638129fc1c146109c857610206565b80632f745c591461060a5780633a7ae75d1461066c57806340c10f191461069a57806342842e0e1461070057610206565b8063095ea7b3116101d9578063095ea7b3146104d357806318160ddd1461052157806323b872dd1461053f5780632cedebee146105ad57610206565b806301ffc9a71461020b57806306fdde0314610270578063077f224a146102f3578063081812fc14610465575b600080fd5b6102566004803603602081101561022157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b6102786111ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b857808201518184015260208101905061029d565b50505050905090810190601f1680156102e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104636004803603606081101561030957600080fd5b810190808035906020019064010000000081111561032657600080fd5b82018360208201111561033857600080fd5b8035906020019184600183028401116401000000008311171561035a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103bd57600080fd5b8201836020820111156103cf57600080fd5b803590602001918460018302840111640100000000831117156103f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a1565b005b6104916004803603602081101561047b57600080fd5b81019080803590602001909291905050506114b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051f600480360360408110156104e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061154b565b005b610529611732565b6040518082815260200191505060405180910390f35b6105ab6004803603606081101561055557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061173f565b005b6105d9600480360360208110156105c357600080fd5b81019080803590602001909291905050506117b5565b604051808581526020018481526020018381526020018260ff1660ff16815260200194505050505060405180910390f35b6106566004803603604081101561062057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118dc565b6040518082815260200191505060405180910390f35b6106986004803603602081101561068257600080fd5b810190808035906020019092919050505061199b565b005b6106e6600480360360408110156106b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611aa3565b604051808215151515815260200191505060405180910390f35b61076c6004803603606081101561071657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b1e565b005b6108be6004803603604081101561078457600080fd5b81019080803590602001906401000000008111156107a157600080fd5b8201836020820111156107b357600080fd5b803590602001918460018302840111640100000000831117156107d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561083857600080fd5b82018360208201111561084a57600080fd5b8035906020019184600183028401116401000000008311171561086c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b3e565b005b6108ec600480360360208110156108d657600080fd5b8101908080359060200190929190505050611c8e565b6040518082815260200191505060405180910390f35b61092e6004803603602081101561091857600080fd5b8101908080359060200190929190505050611d0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109b26004803603602081101561098657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dd6565b6040518082815260200191505060405180910390f35b6109d0611eab565b005b610ab5600480360360608110156109e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a2f57600080fd5b820183602082011115610a4157600080fd5b80359060200191846001830284011164010000000083111715610a6357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611fcb565b604051808215151515815260200191505060405180910390f35b610ad7612048565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b17578082015181840152602081019050610afc565b50505050905090810190601f168015610b445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b7e60048036036020811015610b6857600080fd5b81019080803590602001909291905050506120ea565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bc1578082015181840152602081019050610ba6565b505050509050019250505060405180910390f35b610c1760048036036020811015610beb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612156565b005b610c216121c7565b005b610c6f60048036036040811015610c3957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506121d9565b604051808215151515815260200191505060405180910390f35b610cd760048036036040811015610c9f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612254565b005b610d1b60048036036020811015610cef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061240c565b604051808215151515815260200191505060405180910390f35b610d9560048036036080811015610d4b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061242a565b6040518082815260200191505060405180910390f35b610eae60048036036080811015610dc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e2857600080fd5b820183602082011115610e3a57600080fd5b80359060200191846001830284011164010000000083111715610e5c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506126ab565b005b610edc60048036036020811015610ec657600080fd5b8101908080359060200190929190505050612723565b60405180858152602001848152602001838152602001826001811115610efe57fe5b60ff16815260200194505050505060405180910390f35b610f5760048036036020811015610f2b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061276e565b005b610f8560048036036020811015610f6f57600080fd5b8101908080359060200190929190505050612888565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fc5578082015181840152602081019050610faa565b50505050905090810190601f168015610ff25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6110366004803603604081101561101657600080fd5b81019080803590602001909291908035906020019092919050505061299b565b6040518082815260200191505060405180910390f35b6110ae6004803603604081101561106257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129ca565b604051808215151515815260200191505060405180910390f35b6110fe600480360360408110156110de57600080fd5b810190808035906020019092919080359060200190929190505050612a5e565b6040518082815260200191505060405180910390f35b6111406004803603602081101561112a57600080fd5b8101908080359060200190929190505050612a8d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611183578082015181840152602081019050611168565b505050509050019250505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112975780601f1061126c57610100808354040283529160200191611297565b820191906000526020600020905b81548152906001019060200180831161127a57829003601f168201915b5050505050905090565b600060019054906101000a900460ff16806112c057506112bf612af9565b5b806112d757506000809054906101000a900460ff16155b61132c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561137c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611384612b0a565b61138c611eab565b6113968484611b3e565b61139f8261276e565b816101a160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061019e60405180608001604052806000815260200160008152602001600081526020016000600181111561141157fe5b8152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600181111561148157fe5b021790555050505080156114aa5760008060016101000a81548160ff0219169083151502179055505b50505050565b60006114bb82612c21565b611510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614343602c913960400191505060405180910390fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061155682611d0e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144176021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166115fc612c93565b73ffffffffffffffffffffffffffffffffffffffff16148061162b575061162a81611625612c93565b6129ca565b5b611680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806142676038913960400191505060405180910390fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000609e80549050905090565b61175061174a612c93565b82612c9b565b6117a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806144386031913960400191505060405180910390fd5b6117b0838383612d8f565b505050565b60008060008060008511611831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5a65726f7468206c6963656e6365206973206e6f742076616c6964000000000081525060200191505060405180910390fd5b6118396140b5565b61019e868154811061184757fe5b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16600181111561189c57fe5b60018111156118a757fe5b815250509050806000015181602001518260400151836060015160018111156118cc57fe5b9450945094509450509193509193565b60006118e783611dd6565b821061193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806141ba602b913960400191505060405180910390fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061198857fe5b9060005260206000200154905092915050565b6101a160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e206f6e6c792062652063616c6c6564206279207265676973747279000081525060200191505060405180910390fd5b600161019e8281548110611a6f57fe5b906000526020600020906004020160030160006101000a81548160ff02191690836001811115611a9b57fe5b021790555050565b6000611ab5611ab0612c93565b61240c565b611b0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b611b148383612db3565b6001905092915050565b611b39838383604051806020016040528060008152506126ab565b505050565b600060019054906101000a900460ff1680611b5d5750611b5c612af9565b5b80611b7457506000809054906101000a900460ff16155b611bc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611c19576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611c21612dd4565b611c2a57600080fd5b8260d29080519060200190611c409291906140e8565b508160d39080519060200190611c579291906140e8565b50611c68635b5e139f60e01b612deb565b8015611c895760008060016101000a81548160ff0219169083151502179055505b505050565b6000611c98611732565b8210611cef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614469602c913960400191505060405180910390fd5b609e8281548110611cfc57fe5b90600052602060002001549050919050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611dcd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806142c96029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061429f602a913960400191505060405180910390fd5b611ea4606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ef4565b9050919050565b600060019054906101000a900460ff1680611eca5750611ec9612af9565b5b80611ee157506000809054906101000a900460ff16155b611f36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611f86576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611f8e612dd4565b611f9757600080fd5b611fa763780e9d6360e01b612deb565b8015611fc85760008060016101000a81548160ff0219169083151502179055505b50565b6000611fdd611fd8612c93565b61240c565b612032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b61203d848484612f02565b600190509392505050565b606060d38054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120e05780601f106120b5576101008083540402835291602001916120e0565b820191906000526020600020905b8154815290600101906020018083116120c357829003601f168201915b5050505050905090565b606061019f600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561214a57602002820191906000526020600020905b815481526020019060010190808311612136575b50505050509050919050565b612166612161612c93565b61240c565b6121bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b6121c481612f73565b50565b6121d76121d2612c93565b612fce565b565b60006121eb6121e6612c93565b61240c565b612240576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806142f26030913960400191505060405180910390fd5b61224a8383613029565b6001905092915050565b61225c612c93565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806069600061230a612c93565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166123b7612c93565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006124238261013961304790919063ffffffff16565b9050919050565b60006101a160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146124f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e206f6e6c792062652063616c6c6564206279207265676973747279000081525060200191505060405180910390fd5b6124f86140b5565b60405180608001604052808681526020018581526020018481526020016000600181111561252257fe5b81525090506000600161019e839080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600181111561259c57fe5b0217905550505003905061019f60008781526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506101a0600086815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061262c8782611aa3565b61269e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4c6963656e6365206d696e74696e67206661696c65640000000000000000000081525060200191505060405180910390fd5b8092505050949350505050565b6126bc6126b6612c93565b83612c9b565b612711576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806144386031913960400191505060405180910390fd5b61271d84848484613125565b50505050565b61019e818154811061273157fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b600060019054906101000a900460ff168061278d575061278c612af9565b5b806127a457506000809054906101000a900460ff16155b6127f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612849576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612851612dd4565b61285a57600080fd5b61286382613197565b80156128845760008060016101000a81548160ff0219169083151502179055505b5050565b606061289382612c21565b6128e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806143e8602f913960400191505060405180910390fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561298f5780601f106129645761010080835404028352916020019161298f565b820191906000526020600020905b81548152906001019060200180831161297257829003601f168201915b50505050509050919050565b6101a060205281600052604060002081815481106129b557fe5b90600052602060002001600091509150505481565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61019f6020528160005260406000208181548110612a7857fe5b90600052602060002001600091509150505481565b60606101a06000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612aed57602002820191906000526020600020905b815481526020019060010190808311612ad9575b50505050509050919050565b600080303b90506000811491505090565b600060019054906101000a900460ff1680612b295750612b28612af9565b5b80612b4057506000809054906101000a900460ff16155b612b95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612be5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612bed6132ae565b612bfd6380ac58cd60e01b612deb565b8015612c1e5760008060016101000a81548160ff0219169083151502179055505b50565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000612ca682612c21565b612cfb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061423b602c913960400191505060405180910390fd5b6000612d0683611d0e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d7557508373ffffffffffffffffffffffffffffffffffffffff16612d5d846114b0565b73ffffffffffffffffffffffffffffffffffffffff16145b80612d865750612d8581856129ca565b5b91505092915050565b612d9a8383836133bd565b612da48382613618565b612dae82826137b6565b505050565b612dbd828261387d565b612dc782826137b6565b612dd081613a95565b5050565b6000612de66380ac58cd60e01b611197565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415612e87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081600001549050919050565b612f0c8383612db3565b612f196000848484613ae1565b612f6e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806141e56032913960400191505060405180910390fd5b505050565b612f8881610139613cd190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b612fe381610139613dac90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b613043828260405180602001604052806000815250612f02565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156130ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061436f6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613130848484612d8f565b61313c84848484613ae1565b613191576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806141e56032913960400191505060405180910390fd5b50505050565b600060019054906101000a900460ff16806131b657506131b5612af9565b5b806131cd57506000809054906101000a900460ff16155b613222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613272576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61327b8261240c565b6132895761328882612f73565b5b80156132aa5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff16806132cd57506132cc612af9565b5b806132e457506000809054906101000a900460ff16155b613339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614391602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613389576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6133996301ffc9a760e01b612deb565b80156133ba5760008060016101000a81548160ff0219169083151502179055505b50565b8273ffffffffffffffffffffffffffffffffffffffff166133dd82611d0e565b73ffffffffffffffffffffffffffffffffffffffff1614613449576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806143bf6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156134cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806142176024913960400191505060405180910390fd5b6134d881613e69565b61351f606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f27565b613566606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f4a565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006136706001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613f6090919063ffffffff16565b90506000609d600084815260200190815260200160002054905081811461375d576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106136dd57fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061373557fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036137af9190614168565b5050505050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613920576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61392981612c21565b1561399c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a35606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f4a565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6000613b028473ffffffffffffffffffffffffffffffffffffffff16613faa565b613b0f5760019050613cc9565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02613b35612c93565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613bf1578082015181840152602081019050613bd6565b50505050905090810190601f168015613c1e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613c4057600080fd5b505af1158015613c54573d6000803e3d6000fd5b505050506040513d6020811015613c6a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b613cdb8282613047565b15613d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613db68282613047565b613e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806143226021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613f245760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613f3f60018260000154613f6090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613fa283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613ff5565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015613fec5750808214155b92505050919050565b60008383111582906140a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561406757808201518184015260208101905061404c565b50505050905090810190601f1680156140945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060800160405280600081526020016000815260200160008152602001600060018111156140e257fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061412957805160ff1916838001178555614157565b82800160010185558215614157579182015b8281111561415657825182559160200191906001019061413b565b5b5090506141649190614194565b5090565b81548183558181111561418f5781836000526020600020918201910161418e9190614194565b5b505050565b6141b691905b808211156141b257600081600090555060010161419a565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a723158204e9b9f4494142b37138c034c015d3f66ef6997feb51385030ee6d8b1432bb6ad64736f6c634300050c0032",
  "sourceMap": "358:2726:2:-;;;;;;;;;",
  "deployedSourceMap": "358:2726:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:2726:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:131:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1008:131:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1435:83:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1435:83:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:420:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1022:420:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1022:420:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1022:420:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1022:420:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1022:420:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1022:420:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1022:420:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1022:420:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1022:420:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4538:200:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4538:200:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3838:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3838:415:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2454:94:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6184:287:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6184:287:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2465:427:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2465:427:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:229:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:229:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2161:133:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2161:133:2;;;;;;;;;;;;;;;;;:::i;:::-;;673:132:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;673:132:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7120::22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7120:132:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;871:321:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;871:321:25;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:321:25;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:321:25;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:321:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:321:25;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:321:25;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:321:25;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:321:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:321:25;;;;;;;;;;;;;;;:::i;:::-;;2886:196:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2886:196:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3194:223:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3194:223:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2768:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2768:207:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1316:242:23;;;:::i;:::-;;1514:167:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1514:167:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1514:167:26;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1514:167:26;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1514:167:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1514:167:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1627:87:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1627:87:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:159:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2300:159:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2300:159:2;;;;;;;;;;;;;;;;;756:90:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;756:90:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;852:77;;;:::i;:::-;;1053:140:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1053:140:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5031:249:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5031:249:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;643:107:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;643:107:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1448:707:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1448:707:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7975:269:22;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7975:269:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7975:269:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7975:269:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7975:269:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7975:269:22;;;;;;;;;;;;;;;:::i;:::-;;641:25:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;641:25:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;284:148:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;284:148:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;1914:202:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1914:202:25;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1914:202:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:56:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;814:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5602:145:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5602:145:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;714:50:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;714:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2898:184;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2898:184:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2898:184:2;;;;;;;;;;;;;;;;;1008:131:17;1076:4;1099:20;:33;1120:11;1099:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:40;;1008:131;;;:::o;1435:83:25:-;1474:13;1506:5;1499:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:83;:::o;1022:420:2:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1171:19:2;:17;:19::i;:::-;1200:29;:27;:29::i;:::-;1239:41;1265:5;1272:7;1239:25;:41::i;:::-;1290:43;1316:16;1290:25;:43::i;:::-;1355:16;1344:8;;:27;;;;;;;;;;;;;;;;;;1382:8;1396:38;;;;;;;;1404:1;1396:38;;;;1407:1;1396:38;;;;1410:1;1396:38;;;;1413:20;1396:38;;;;;;;;;;;1382:53;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1382:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1022:420:2;;;;:::o;4538:200:22:-;4597:7;4624:16;4632:7;4624;:16::i;:::-;4616:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4707:15;:24;4723:7;4707:24;;;;;;;;;;;;;;;;;;;;;4700:31;;4538:200;;;:::o;3838:415::-;3901:13;3917:16;3925:7;3917;:16::i;:::-;3901:32;;3957:5;3951:11;;:2;:11;;;;3943:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4035:5;4019:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4044:37;4061:5;4068:12;:10;:12::i;:::-;4044:16;:37::i;:::-;4019:62;4011:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4201:2;4174:15;:24;4190:7;4174:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4238:7;4234:2;4218:28;;4227:5;4218:28;;;;;;;;;;;;3838:415;;;:::o;2454:94:23:-;2498:7;2524:10;:17;;;;2517:24;;2454:94;:::o;6184:287:22:-;6326:41;6345:12;:10;:12::i;:::-;6359:7;6326:18;:41::i;:::-;6318:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:32;6446:4;6452:2;6456:7;6432:13;:32::i;:::-;6184:287;;;:::o;2465:427:2:-;2551:7;2560;2569;2578:5;2621:1;2607:11;:15;2599:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2664:23;;:::i;:::-;2690:8;2699:11;2690:21;;;;;;;;;;;;;;;;;;2664:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:8;:17;;;2773:8;:23;;;2810:8;:29;;;2859:8;:15;;;2853:22;;;;;;;;2721:164;;;;;;;;;2465:427;;;;;:::o;2072:229:23:-;2152:7;2187:16;2197:5;2187:9;:16::i;:::-;2179:5;:24;2171:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:12;:19;2281:5;2268:19;;;;;;;;;;;;;;;2288:5;2268:26;;;;;;;;;;;;;;;;2261:33;;2072:229;;;;:::o;2161:133:2:-;933:8;;;;;;;;;;;919:22;;:10;:22;;;911:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2266:21;2235:8;2244:11;2235:21;;;;;;;;;;;;;;;;;;:28;;;:52;;;;;;;;;;;;;;;;;;;;;;;;2161:133;:::o;673:132:26:-;743:4;544:22:15;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:18:26;765:2;769:7;759:5;:18::i;:::-;794:4;787:11;;673:132;;;;:::o;7120::22:-;7206:39;7223:4;7229:2;7233:7;7206:39;;;;;;;;;;;;:16;:39::i;:::-;7120:132;;;:::o;871:321:25:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;970:28:25;:26;:28::i;:::-;962:37;;;;;;1018:4;1010:5;:12;;;;;;;;;;;;:::i;:::-;;1042:6;1032:7;:16;;;;;;;;;;;;:::i;:::-;;1136:49;805:10;1155:29;;1136:18;:49::i;:::-;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;871:321:25;;;:::o;2886:196:23:-;2944:7;2979:13;:11;:13::i;:::-;2971:5;:21;2963:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:10;3069:5;3058:17;;;;;;;;;;;;;;;;3051:24;;2886:196;;;:::o;3194:223:22:-;3249:7;3268:13;3284:11;:20;3296:7;3284:20;;;;;;;;;;;;;;;;;;;;;3268:36;;3339:1;3322:19;;:5;:19;;;;3314:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:5;3398:12;;;3194:223;;;:::o;2768:207::-;2823:7;2867:1;2850:19;;:5;:19;;;;2842:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2934:34;:17;:24;2952:5;2934:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2927:41;;2768:207;;;:::o;1316:242:23:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1375:28:23;:26;:28::i;:::-;1367:37;;;;;;1500:51;1249:10;1519:31;;1500:18;:51::i;:::-;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1316:242:23;:::o;1514:167:26:-;1608:4;544:22:15;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:29:26;1634:2;1638:7;1647:5;1624:9;:29::i;:::-;1670:4;1663:11;;1514:167;;;;;:::o;1627:87:25:-;1668:13;1700:7;1693:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:87;:::o;2300:159:2:-;2390:16;2429:13;:23;2443:8;2429:23;;;;;;;;;;;2422:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:159;;;:::o;756:90:15:-;544:22;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1053:140:26:-;1127:4;544:22:15;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:22:26;1153:2;1157:7;1143:9;:22::i;:::-;1182:4;1175:11;;1053:140;;;;:::o;5031:249:22:-;5116:12;:10;:12::i;:::-;5110:18;;:2;:18;;;;5102:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5208:8;5169:18;:32;5188:12;:10;:12::i;:::-;5169:32;;;;;;;;;;;;;;;:36;5202:2;5169:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5260:2;5231:42;;5246:12;:10;:12::i;:::-;5231:42;;;5264:8;5231:42;;;;;;;;;;;;;;;;;;;;;;5031:249;;:::o;643:107:15:-;699:4;722:21;735:7;722:8;:12;;:21;;;;:::i;:::-;715:28;;643:107;;;:::o;1448:707:2:-;1641:7;933:8;;;;;;;;;;;919:22;;:10;:22;;;911:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:22;;:::i;:::-;1685:138;;;;;;;;1706:9;1685:138;;;;1729:15;1685:138;;;;1758:21;1685:138;;;;1793:20;1685:138;;;;;;;;;;;1660:163;;1833:18;1879:1;1854:8;1868:7;1854:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1854:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26;1833:47;;1891:13;:24;1905:9;1891:24;;;;;;;;;;;1921:10;1891:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1891:41:2;;;;;;;;;;;;;;;;;;;;;;1942:19;:36;1962:15;1942:36;;;;;;;;;;;1984:10;1942:53;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1942:53:2;;;;;;;;;;;;;;;;;;;;;;2027:46;2047:13;2062:10;2027:19;:46::i;:::-;2006:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:10;2131:17;;;;1448:707;;;;;;:::o;7975:269:22:-;8089:41;8108:12;:10;:12::i;:::-;8122:7;8089:18;:41::i;:::-;8081:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8194:43;8212:4;8218:2;8222:7;8231:5;8194:17;:43::i;:::-;7975:269;;;;:::o;641:25:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;284:148:26:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;357:28:26;:26;:28::i;:::-;349:37;;;;;;396:29;418:6;396:21;:29::i;:::-;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;284:148:26;;:::o;1914:202:25:-;1972:13;2005:16;2013:7;2005;:16::i;:::-;1997:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:10;:19;2101:7;2090:19;;;;;;;;;;;2083:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:202;;;:::o;814:56:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5602:145:22:-;5682:4;5705:18;:25;5724:5;5705:25;;;;;;;;;;;;;;;:35;5731:8;5705:35;;;;;;;;;;;;;;;;;;;;;;;;;5698:42;;5602:145;;;;:::o;714:50:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2898:184::-;3000:16;3039:19;:36;3059:15;3039:36;;;;;;;;;;;3032:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:184;;;:::o;1409:467:32:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;2230:205:22:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2281:19:22;:17;:19::i;:::-;2388:40;2213:10;2407:20;;2388:18;:40::i;:::-;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2230:205:22;:::o;9415:152::-;9472:4;9488:13;9504:11;:20;9516:7;9504:20;;;;;;;;;;;;;;;;;;;;;9488:36;;9558:1;9541:19;;:5;:19;;;;9534:26;;;9415:152;;;:::o;867:96:10:-;912:15;946:10;939:17;;867:96;:::o;9928:329:22:-;10013:4;10037:16;10045:7;10037;:16::i;:::-;10029:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:13;10128:16;10136:7;10128;:16::i;:::-;10112:32;;10173:5;10162:16;;:7;:16;;;:51;;;;10206:7;10182:31;;:20;10194:7;10182:11;:20::i;:::-;:31;;;10162:51;:87;;;;10217:32;10234:5;10241:7;10217:16;:32::i;:::-;10162:87;10154:96;;;9928:329;;;;:::o;3457:239:23:-;3542:38;3562:4;3568:2;3572:7;3542:19;:38::i;:::-;3591:47;3624:4;3630:7;3591:32;:47::i;:::-;3649:40;3677:2;3681:7;3649:27;:40::i;:::-;3457:239;;;:::o;3953:196::-;4016:24;4028:2;4032:7;4016:11;:24::i;:::-;4051:40;4079:2;4083:7;4051:27;:40::i;:::-;4102;4134:7;4102:31;:40::i;:::-;3953:196;;:::o;2441:123:22:-;2495:4;2518:39;2213:10;2536:20;;2518:17;:39::i;:::-;2511:46;;2441:123;:::o;1533:190:17:-;1623:10;1608:25;;:11;:25;;;;;1600:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:4;1676:20;:33;1697:11;1676:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1533:190;:::o;1065:112:16:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11487:239:22:-;11574:18;11580:2;11584:7;11574:5;:18::i;:::-;11610:54;11641:1;11645:2;11649:7;11658:5;11610:22;:54::i;:::-;11602:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11487:239;;;:::o;935:119:15:-;991:21;1004:7;991:8;:12;;:21;;;;:::i;:::-;1039:7;1027:20;;;;;;;;;;;;935:119;:::o;1060:127::-;1119:24;1135:7;1119:8;:15;;:24;;;;:::i;:::-;1172:7;1158:22;;;;;;;;;;;;1060:127;:::o;10786:100:22:-;10853:26;10863:2;10867:7;10853:26;;;;;;;;;;;;:9;:26::i;:::-;10786:100;;:::o;779:200:14:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8951:269:22:-;9060:32;9074:4;9080:2;9084:7;9060:13;:32::i;:::-;9110:48;9133:4;9139:2;9143:7;9152:5;9110:22;:48::i;:::-;9102:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8951:269;;;;:::o;361:137:15:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;431:16:15;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;:::-;426:66;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;361:137:15;;:::o;624:234:17:-;1024:12:32;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;811:40:17;461:10;830:20;;811:18;:40::i;:::-;1268:14:32;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;624:234:17;:::o;13538:447:22:-;13651:4;13631:24;;:16;13639:7;13631;:16::i;:::-;:24;;;13623:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13733:1;13719:16;;:2;:16;;;;13711:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13787:23;13802:7;13787:14;:23::i;:::-;13821:35;:17;:23;13839:4;13821:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13866:33;:17;:21;13884:2;13866:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13933:2;13910:11;:20;13922:7;13910:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13970:7;13966:2;13951:27;;13960:4;13951:27;;;;;;;;;;;;13538:447;;;:::o;6567:1128:23:-;6829:22;6854:32;6884:1;6854:12;:18;6867:4;6854:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6829:57;;6896:18;6917:17;:26;6935:7;6917:26;;;;;;;;;;;;6896:47;;7061:14;7047:10;:28;7043:323;;7091:19;7113:12;:18;7126:4;7113:18;;;;;;;;;;;;;;;7132:14;7113:34;;;;;;;;;;;;;;;;7091:56;;7195:11;7162:12;:18;7175:4;7162:18;;;;;;;;;;;;;;;7181:10;7162:30;;;;;;;;;;;;;;;:44;;;;7311:10;7278:17;:30;7296:11;7278:30;;;;;;;;;;;:43;;;;7043:323;;7452:12;:18;7465:4;7452:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6567:1128;;;;:::o;5411:183::-;5524:12;:16;5537:2;5524:16;;;;;;;;;;;;;;;:23;;;;5495:17;:26;5513:7;5495:26;;;;;;;;;;;:52;;;;5557:12;:16;5570:2;5557:16;;;;;;;;;;;;;;;5579:7;5557:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5557:30:23;;;;;;;;;;;;;;;;;;;;;;5411:183;;:::o;11971:327:22:-;12056:1;12042:16;;:2;:16;;;;12034:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12114:16;12122:7;12114;:16::i;:::-;12113:17;12105:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12197:2;12174:11;:20;12186:7;12174:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12209:33;:17;:21;12227:2;12209:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12283:7;12279:2;12258:33;;12275:1;12258:33;;;;;;;;;;;;11971:327;;:::o;5789:161:23:-;5892:10;:17;;;;5865:15;:24;5881:7;5865:24;;;;;;;;;;;:44;;;;5919:10;5935:7;5919:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5919:24:23;;;;;;;;;;;;;;;;;;;;;;5789:161;:::o;14574:349:22:-;14695:4;14720:15;:2;:13;;;:15::i;:::-;14715:58;;14758:4;14751:11;;;;14715:58;14783:13;14815:2;14799:36;;;14836:12;:10;:12::i;:::-;14850:4;14856:7;14865:5;14799:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14799:72:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14799:72:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14799:72:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14799:72:22;;;;;;;;;;;;;;;;14783:88;;831:10;14899:16;;14889:26;;;:6;:26;;;;14881:35;;;14574:349;;;;;;;:::o;260:175:14:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;15085:171:22:-;15184:1;15148:38;;:15;:24;15164:7;15148:24;;;;;;;;;;;;;;;;;;;;;:38;;;15144:106;;15237:1;15202:15;:24;15218:7;15202:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15144:106;15085:171;:::o;1278:108:16:-;1358:21;1377:1;1358:7;:14;;;:18;;:21;;;;:::i;:::-;1341:7;:14;;:38;;;;1278:108;:::o;1183:89::-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;1274:134:19:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;557:797:31:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o;1732:187:19:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;358:2726:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.12;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\";\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol\";\n\ncontract LicenceManager is\n    Initializable,\n    ERC721Full,\n    ERC721Mintable\n{\n    enum LicenceStatus {Active, Revoked}\n\n    struct Licence {\n        uint256 owner_Id;\n        uint256 publication_Id;\n        uint256 publicationLicenceNo;\n        LicenceStatus status;\n    }\n\n    Licence[] public licences;\n    // user Id to their array of licences\n    mapping(uint256 => uint256[]) public licenceOwners;\n    // licence Id to get the publication Id\n    mapping(uint256 => uint256[]) public publicationLicences;\n\n    modifier onlyRegistry() {\n        require(msg.sender == registry, \"Can only be called by registry\");\n        _;\n    }\n\n    address registry;\n    function initialize(\n        string memory _name,\n        string memory _symbol,\n        address _unicoinRegistry\n    ) public initializer {\n        ERC721.initialize();\n        ERC721Enumerable.initialize();\n        ERC721Metadata.initialize(_name, _symbol);\n        ERC721Mintable.initialize(_unicoinRegistry);\n\n        registry = _unicoinRegistry;\n\n        licences.push(Licence(0, 0, 0, LicenceStatus.Active));\n    }\n\n    function registerNewLicence(\n        address _ownerAddress,\n        uint256 _owner_Id,\n        uint256 _publication_Id,\n        uint256 _publicationLicenceNo\n    ) public onlyRegistry returns (uint256) {\n        Licence memory licence = Licence(\n            _owner_Id,\n            _publication_Id,\n            _publicationLicenceNo,\n            LicenceStatus.Active\n        );\n        uint256 licence_Id = licences.push(licence) - 1;\n\n        licenceOwners[_owner_Id].push(licence_Id);\n        publicationLicences[_publication_Id].push(licence_Id);\n\n        require(\n            ERC721Mintable.mint(_ownerAddress, licence_Id),\n            \"Licence minting failed\"\n        );\n        return licence_Id;\n    }\n\n    function revokeLicence(uint256 _licence_Id) public onlyRegistry {\n        licences[_licence_Id].status = LicenceStatus.Revoked;\n    }\n\n    function getLicenceForUser(uint256 _user_Id)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        return licenceOwners[_user_Id];\n    }\n\n    function getLicence(uint256 _licence_Id)\n        public\n        view\n        returns (uint256, uint256, uint256, uint8)\n    {\n        require(_licence_Id > 0, \"Zeroth licence is not valid\");\n        Licence memory _licence = licences[_licence_Id];\n        return (\n            _licence.owner_Id,\n            _licence.publication_Id,\n            _licence.publicationLicenceNo,\n            uint8(_licence.status)\n        );\n    }\n\n    function getPublicationLicences(uint256 _publication_Id)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        return publicationLicences[_publication_Id];\n    }\n}\n",
  "sourcePath": "/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol",
    "exportedSymbols": {
      "LicenceManager": [
        1791
      ]
    },
    "id": 1792,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1549,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 1550,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 7169,
        "src": "26:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 1551,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 6216,
        "src": "88:84:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "id": 1552,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 6600,
        "src": "174:88:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 1553,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 6853,
        "src": "264:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1554,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7168,
              "src": "389:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$7168",
                "typeString": "contract Initializable"
              }
            },
            "id": 1555,
            "nodeType": "InheritanceSpecifier",
            "src": "389:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1556,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6599,
              "src": "408:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$6599",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1557,
            "nodeType": "InheritanceSpecifier",
            "src": "408:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1558,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6852,
              "src": "424:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$6852",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 1559,
            "nodeType": "InheritanceSpecifier",
            "src": "424:14:2"
          }
        ],
        "contractDependencies": [
          3900,
          4766,
          4876,
          4886,
          6215,
          6580,
          6599,
          6756,
          6852,
          6958,
          6988,
          7014,
          7168
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1791,
        "linearizedBaseContracts": [
          1791,
          6852,
          4766,
          6599,
          6756,
          7014,
          6580,
          6988,
          6215,
          6958,
          4876,
          4886,
          3900,
          7168
        ],
        "name": "LicenceManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LicenceManager.LicenceStatus",
            "id": 1562,
            "members": [
              {
                "id": 1560,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "465:6:2"
              },
              {
                "id": 1561,
                "name": "Revoked",
                "nodeType": "EnumValue",
                "src": "473:7:2"
              }
            ],
            "name": "LicenceStatus",
            "nodeType": "EnumDefinition",
            "src": "445:36:2"
          },
          {
            "canonicalName": "LicenceManager.Licence",
            "id": 1571,
            "members": [
              {
                "constant": false,
                "id": 1564,
                "name": "owner_Id",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "512:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1563,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "512:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1566,
                "name": "publication_Id",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "538:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1565,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "538:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1568,
                "name": "publicationLicenceNo",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "570:28:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1567,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1570,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "608:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                  "typeString": "enum LicenceManager.LicenceStatus"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1569,
                  "name": "LicenceStatus",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1562,
                  "src": "608:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                    "typeString": "enum LicenceManager.LicenceStatus"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Licence",
            "nodeType": "StructDefinition",
            "scope": 1791,
            "src": "487:148:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1574,
            "name": "licences",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "641:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
              "typeString": "struct LicenceManager.Licence[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1572,
                "name": "Licence",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1571,
                "src": "641:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Licence_$1571_storage_ptr",
                  "typeString": "struct LicenceManager.Licence"
                }
              },
              "id": 1573,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "641:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage_ptr",
                "typeString": "struct LicenceManager.Licence[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1579,
            "name": "licenceOwners",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "714:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 1578,
              "keyType": {
                "id": 1575,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "722:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "714:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1576,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "733:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 1577,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "733:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1584,
            "name": "publicationLicences",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "814:56:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 1583,
              "keyType": {
                "id": 1580,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "822:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "814:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1581,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 1582,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "833:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "901:93:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1587,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7183,
                            "src": "919:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "919:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1589,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1598,
                          "src": "933:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "919:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c6564206279207265676973747279",
                        "id": 1591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:32:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        },
                        "value": "Can only be called by registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        }
                      ],
                      "id": 1586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7186,
                        7187
                      ],
                      "referencedDeclaration": 7187,
                      "src": "911:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "911:65:2"
                },
                {
                  "id": 1594,
                  "nodeType": "PlaceholderStatement",
                  "src": "986:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1596,
            "name": "onlyRegistry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:2"
            },
            "src": "877:117:2",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1598,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "1000:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1597,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1000:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1648,
              "nodeType": "Block",
              "src": "1161:281:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1609,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6215,
                        "src": "1171:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6215_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5620,
                      "src": "1171:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1613,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6580,
                        "src": "1200:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$6580_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 1616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6267,
                      "src": "1200:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1600,
                        "src": "1265:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1602,
                        "src": "1272:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1619,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6756,
                        "src": "1239:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$6756_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 1621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6655,
                      "src": "1239:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1625,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "_unicoinRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "1316:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1626,
                        "name": "ERC721Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6852,
                        "src": "1290:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$6852_$",
                          "typeString": "type(contract ERC721Mintable)"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6787,
                      "src": "1290:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1631,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1632,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "1344:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1633,
                      "name": "_unicoinRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "1355:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1344:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1404:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1407:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1410:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1643,
                              "name": "LicenceStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1562,
                              "src": "1413:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_LicenceStatus_$1562_$",
                                "typeString": "type(enum LicenceManager.LicenceStatus)"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1413:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          ],
                          "id": 1639,
                          "name": "Licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "1396:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Licence_$1571_storage_ptr_$",
                            "typeString": "type(struct LicenceManager.Licence storage pointer)"
                          }
                        },
                        "id": 1645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Licence_$1571_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1636,
                        "name": "licences",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "1382:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                          "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                        }
                      },
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1382:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$1571_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                      }
                    },
                    "id": 1646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1647,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:53:2"
                }
              ]
            },
            "documentation": null,
            "id": 1649,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1607,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1606,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7149,
                  "src": "1149:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1149:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "1051:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1602,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "1080:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1604,
                  "name": "_unicoinRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "1111:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1041:100:2"
            },
            "returnParameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:0:2"
            },
            "scope": 1791,
            "src": "1022:420:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "1650:505:2",
              "statements": [
                {
                  "assignments": [
                    1665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1665,
                      "name": "licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 1708,
                      "src": "1660:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1664,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1571,
                        "src": "1660:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1673,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1667,
                        "name": "_owner_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "1706:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1668,
                        "name": "_publication_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "1729:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1669,
                        "name": "_publicationLicenceNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "1758:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1670,
                          "name": "LicenceStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1562,
                          "src": "1793:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_LicenceStatus_$1562_$",
                            "typeString": "type(enum LicenceManager.LicenceStatus)"
                          }
                        },
                        "id": 1671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1793:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                          "typeString": "enum LicenceManager.LicenceStatus"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                          "typeString": "enum LicenceManager.LicenceStatus"
                        }
                      ],
                      "id": 1666,
                      "name": "Licence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1571,
                      "src": "1685:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Licence_$1571_storage_ptr_$",
                        "typeString": "type(struct LicenceManager.Licence storage pointer)"
                      }
                    },
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:138:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$1571_memory",
                      "typeString": "struct LicenceManager.Licence memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1660:163:2"
                },
                {
                  "assignments": [
                    1675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1675,
                      "name": "licence_Id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1708,
                      "src": "1833:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1833:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1682,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1678,
                          "name": "licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "1868:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1676,
                          "name": "licences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "1854:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                            "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                          }
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1854:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$1571_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                        }
                      },
                      "id": 1679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1854:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1879:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1854:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1833:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1687,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "1921:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1683,
                          "name": "licenceOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1579,
                          "src": "1891:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 1685,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1684,
                          "name": "_owner_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "1905:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1891:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1891:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1689,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1694,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "1984:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1690,
                          "name": "publicationLicences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "1942:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 1692,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1691,
                          "name": "_publication_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "1962:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1942:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1942:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1942:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1696,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:53:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1700,
                            "name": "_ownerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1651,
                            "src": "2047:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1701,
                            "name": "licence_Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1675,
                            "src": "2062:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1698,
                            "name": "ERC721Mintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6852,
                            "src": "2027:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$6852_$",
                              "typeString": "type(contract ERC721Mintable)"
                            }
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6806,
                          "src": "2027:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2027:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6963656e6365206d696e74696e67206661696c6564",
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2087:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        },
                        "value": "Licence minting failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        }
                      ],
                      "id": 1697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7186,
                        7187
                      ],
                      "referencedDeclaration": 7187,
                      "src": "2006:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:115:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:115:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "name": "licence_Id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1675,
                    "src": "2138:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1663,
                  "id": 1707,
                  "nodeType": "Return",
                  "src": "2131:17:2"
                }
              ]
            },
            "documentation": null,
            "id": 1709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1660,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1659,
                  "name": "onlyRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1596,
                  "src": "1619:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1619:12:2"
              }
            ],
            "name": "registerNewLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1485:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_owner_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1516:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1655,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1543:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1657,
                  "name": "_publicationLicenceNo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1576:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1475:136:2"
            },
            "returnParameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1662,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1641:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1640:9:2"
            },
            "scope": 1791,
            "src": "1448:707:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1724,
              "nodeType": "Block",
              "src": "2225:69:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1716,
                          "name": "licences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "2235:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                            "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                          }
                        },
                        "id": 1718,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1717,
                          "name": "_licence_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1711,
                          "src": "2244:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2235:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_storage",
                          "typeString": "struct LicenceManager.Licence storage ref"
                        }
                      },
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1570,
                      "src": "2235:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                        "typeString": "enum LicenceManager.LicenceStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1720,
                        "name": "LicenceStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2266:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LicenceStatus_$1562_$",
                          "typeString": "type(enum LicenceManager.LicenceStatus)"
                        }
                      },
                      "id": 1721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Revoked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2266:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                        "typeString": "enum LicenceManager.LicenceStatus"
                      }
                    },
                    "src": "2235:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                      "typeString": "enum LicenceManager.LicenceStatus"
                    }
                  },
                  "id": 1723,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:52:2"
                }
              ]
            },
            "documentation": null,
            "id": 1725,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1714,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1713,
                  "name": "onlyRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1596,
                  "src": "2212:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2212:12:2"
              }
            ],
            "name": "revokeLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "name": "_licence_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1725,
                  "src": "2184:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2183:21:2"
            },
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:0:2"
            },
            "scope": 1791,
            "src": "2161:133:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1737,
              "nodeType": "Block",
              "src": "2412:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1733,
                      "name": "licenceOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1579,
                      "src": "2429:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 1735,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1734,
                      "name": "_user_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "2443:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2429:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1732,
                  "id": 1736,
                  "nodeType": "Return",
                  "src": "2422:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 1738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicenceForUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1727,
                  "name": "_user_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "2327:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2326:18:2"
            },
            "returnParameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1731,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "2390:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1729,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2390:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1730,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2390:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2389:18:2"
            },
            "scope": 1791,
            "src": "2300:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1776,
              "nodeType": "Block",
              "src": "2589:303:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1752,
                          "name": "_licence_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1740,
                          "src": "2607:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2621:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2607:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5a65726f7468206c6963656e6365206973206e6f742076616c6964",
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2624:29:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14d33be5fe829f82a1992ffb1c70dc80130d7788ab17e074e2bcced7d7c2aa90",
                          "typeString": "literal_string \"Zeroth licence is not valid\""
                        },
                        "value": "Zeroth licence is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14d33be5fe829f82a1992ffb1c70dc80130d7788ab17e074e2bcced7d7c2aa90",
                          "typeString": "literal_string \"Zeroth licence is not valid\""
                        }
                      ],
                      "id": 1751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7186,
                        7187
                      ],
                      "referencedDeclaration": 7187,
                      "src": "2599:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1757,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:55:2"
                },
                {
                  "assignments": [
                    1759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1759,
                      "name": "_licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "2664:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1758,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1571,
                        "src": "2664:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1763,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1760,
                      "name": "licences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "2690:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                        "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                      }
                    },
                    "id": 1762,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1761,
                      "name": "_licence_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "2699:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2690:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$1571_storage",
                      "typeString": "struct LicenceManager.Licence storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2664:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1764,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "2742:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1564,
                        "src": "2742:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1766,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "2773:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 1767,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publication_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1566,
                        "src": "2773:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1768,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "2810:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicationLicenceNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1568,
                        "src": "2810:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1771,
                              "name": "_licence",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "2859:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                                "typeString": "struct LicenceManager.Licence memory"
                              }
                            },
                            "id": 1772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1570,
                            "src": "2859:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          ],
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2853:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": "uint8"
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2853:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1774,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2728:157:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 1750,
                  "id": 1775,
                  "nodeType": "Return",
                  "src": "2721:164:2"
                }
              ]
            },
            "documentation": null,
            "id": 1777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "name": "_licence_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2485:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2484:21:2"
            },
            "returnParameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2551:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2560:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1747,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2569:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2578:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2550:34:2"
            },
            "scope": 1791,
            "src": "2465:427:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1789,
              "nodeType": "Block",
              "src": "3022:60:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1785,
                      "name": "publicationLicences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "3039:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 1787,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1786,
                      "name": "_publication_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1779,
                      "src": "3059:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3039:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1784,
                  "id": 1788,
                  "nodeType": "Return",
                  "src": "3032:43:2"
                }
              ]
            },
            "documentation": null,
            "id": 1790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicationLicences",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1779,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "2930:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2929:25:2"
            },
            "returnParameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1783,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "3000:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1781,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3000:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1782,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3000:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2999:18:2"
            },
            "scope": 1791,
            "src": "2898:184:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1792,
        "src": "358:2726:2"
      }
    ],
    "src": "0:3085:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol",
    "exportedSymbols": {
      "LicenceManager": [
        1791
      ]
    },
    "id": 1792,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1549,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 1550,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 7169,
        "src": "26:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 1551,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 6216,
        "src": "88:84:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "id": 1552,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 6600,
        "src": "174:88:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 1553,
        "nodeType": "ImportDirective",
        "scope": 1792,
        "sourceUnit": 6853,
        "src": "264:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1554,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7168,
              "src": "389:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$7168",
                "typeString": "contract Initializable"
              }
            },
            "id": 1555,
            "nodeType": "InheritanceSpecifier",
            "src": "389:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1556,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6599,
              "src": "408:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$6599",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1557,
            "nodeType": "InheritanceSpecifier",
            "src": "408:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1558,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6852,
              "src": "424:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$6852",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 1559,
            "nodeType": "InheritanceSpecifier",
            "src": "424:14:2"
          }
        ],
        "contractDependencies": [
          3900,
          4766,
          4876,
          4886,
          6215,
          6580,
          6599,
          6756,
          6852,
          6958,
          6988,
          7014,
          7168
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1791,
        "linearizedBaseContracts": [
          1791,
          6852,
          4766,
          6599,
          6756,
          7014,
          6580,
          6988,
          6215,
          6958,
          4876,
          4886,
          3900,
          7168
        ],
        "name": "LicenceManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LicenceManager.LicenceStatus",
            "id": 1562,
            "members": [
              {
                "id": 1560,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "465:6:2"
              },
              {
                "id": 1561,
                "name": "Revoked",
                "nodeType": "EnumValue",
                "src": "473:7:2"
              }
            ],
            "name": "LicenceStatus",
            "nodeType": "EnumDefinition",
            "src": "445:36:2"
          },
          {
            "canonicalName": "LicenceManager.Licence",
            "id": 1571,
            "members": [
              {
                "constant": false,
                "id": 1564,
                "name": "owner_Id",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "512:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1563,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "512:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1566,
                "name": "publication_Id",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "538:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1565,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "538:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1568,
                "name": "publicationLicenceNo",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "570:28:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1567,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1570,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 1571,
                "src": "608:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                  "typeString": "enum LicenceManager.LicenceStatus"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1569,
                  "name": "LicenceStatus",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1562,
                  "src": "608:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                    "typeString": "enum LicenceManager.LicenceStatus"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Licence",
            "nodeType": "StructDefinition",
            "scope": 1791,
            "src": "487:148:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1574,
            "name": "licences",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "641:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
              "typeString": "struct LicenceManager.Licence[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1572,
                "name": "Licence",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1571,
                "src": "641:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Licence_$1571_storage_ptr",
                  "typeString": "struct LicenceManager.Licence"
                }
              },
              "id": 1573,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "641:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage_ptr",
                "typeString": "struct LicenceManager.Licence[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1579,
            "name": "licenceOwners",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "714:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 1578,
              "keyType": {
                "id": 1575,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "722:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "714:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1576,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "733:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 1577,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "733:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1584,
            "name": "publicationLicences",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "814:56:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 1583,
              "keyType": {
                "id": 1580,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "822:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "814:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1581,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 1582,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "833:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "901:93:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1587,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7183,
                            "src": "919:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "919:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1589,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1598,
                          "src": "933:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "919:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c6564206279207265676973747279",
                        "id": 1591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:32:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        },
                        "value": "Can only be called by registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        }
                      ],
                      "id": 1586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7186,
                        7187
                      ],
                      "referencedDeclaration": 7187,
                      "src": "911:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "911:65:2"
                },
                {
                  "id": 1594,
                  "nodeType": "PlaceholderStatement",
                  "src": "986:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1596,
            "name": "onlyRegistry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:2"
            },
            "src": "877:117:2",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1598,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 1791,
            "src": "1000:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1597,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1000:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1648,
              "nodeType": "Block",
              "src": "1161:281:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1609,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6215,
                        "src": "1171:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6215_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5620,
                      "src": "1171:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1613,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6580,
                        "src": "1200:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$6580_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 1616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6267,
                      "src": "1200:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1600,
                        "src": "1265:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1602,
                        "src": "1272:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1619,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6756,
                        "src": "1239:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$6756_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 1621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6655,
                      "src": "1239:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1625,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "_unicoinRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "1316:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1626,
                        "name": "ERC721Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6852,
                        "src": "1290:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$6852_$",
                          "typeString": "type(contract ERC721Mintable)"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6787,
                      "src": "1290:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1631,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1632,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "1344:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1633,
                      "name": "_unicoinRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "1355:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1344:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1404:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1407:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1410:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1643,
                              "name": "LicenceStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1562,
                              "src": "1413:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_LicenceStatus_$1562_$",
                                "typeString": "type(enum LicenceManager.LicenceStatus)"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1413:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          ],
                          "id": 1639,
                          "name": "Licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "1396:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Licence_$1571_storage_ptr_$",
                            "typeString": "type(struct LicenceManager.Licence storage pointer)"
                          }
                        },
                        "id": 1645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Licence_$1571_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1636,
                        "name": "licences",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "1382:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                          "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                        }
                      },
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1382:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$1571_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                      }
                    },
                    "id": 1646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1647,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:53:2"
                }
              ]
            },
            "documentation": null,
            "id": 1649,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1607,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1606,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7149,
                  "src": "1149:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1149:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "1051:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1602,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "1080:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1604,
                  "name": "_unicoinRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "1111:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1041:100:2"
            },
            "returnParameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:0:2"
            },
            "scope": 1791,
            "src": "1022:420:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "1650:505:2",
              "statements": [
                {
                  "assignments": [
                    1665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1665,
                      "name": "licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 1708,
                      "src": "1660:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1664,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1571,
                        "src": "1660:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1673,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1667,
                        "name": "_owner_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "1706:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1668,
                        "name": "_publication_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "1729:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1669,
                        "name": "_publicationLicenceNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "1758:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1670,
                          "name": "LicenceStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1562,
                          "src": "1793:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_LicenceStatus_$1562_$",
                            "typeString": "type(enum LicenceManager.LicenceStatus)"
                          }
                        },
                        "id": 1671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1793:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                          "typeString": "enum LicenceManager.LicenceStatus"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                          "typeString": "enum LicenceManager.LicenceStatus"
                        }
                      ],
                      "id": 1666,
                      "name": "Licence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1571,
                      "src": "1685:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Licence_$1571_storage_ptr_$",
                        "typeString": "type(struct LicenceManager.Licence storage pointer)"
                      }
                    },
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:138:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$1571_memory",
                      "typeString": "struct LicenceManager.Licence memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1660:163:2"
                },
                {
                  "assignments": [
                    1675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1675,
                      "name": "licence_Id",
                      "nodeType": "VariableDeclaration",
                      "scope": 1708,
                      "src": "1833:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1833:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1682,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1678,
                          "name": "licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "1868:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1676,
                          "name": "licences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "1854:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                            "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                          }
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1854:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$1571_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                        }
                      },
                      "id": 1679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1854:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1879:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1854:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1833:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1687,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "1921:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1683,
                          "name": "licenceOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1579,
                          "src": "1891:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 1685,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1684,
                          "name": "_owner_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "1905:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1891:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1891:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1689,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1694,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "1984:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1690,
                          "name": "publicationLicences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "1942:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 1692,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1691,
                          "name": "_publication_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "1962:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1942:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1942:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1942:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1696,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:53:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1700,
                            "name": "_ownerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1651,
                            "src": "2047:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1701,
                            "name": "licence_Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1675,
                            "src": "2062:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1698,
                            "name": "ERC721Mintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6852,
                            "src": "2027:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$6852_$",
                              "typeString": "type(contract ERC721Mintable)"
                            }
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6806,
                          "src": "2027:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2027:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6963656e6365206d696e74696e67206661696c6564",
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2087:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        },
                        "value": "Licence minting failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        }
                      ],
                      "id": 1697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7186,
                        7187
                      ],
                      "referencedDeclaration": 7187,
                      "src": "2006:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:115:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:115:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "name": "licence_Id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1675,
                    "src": "2138:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1663,
                  "id": 1707,
                  "nodeType": "Return",
                  "src": "2131:17:2"
                }
              ]
            },
            "documentation": null,
            "id": 1709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1660,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1659,
                  "name": "onlyRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1596,
                  "src": "1619:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1619:12:2"
              }
            ],
            "name": "registerNewLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1485:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_owner_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1516:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1655,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1543:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1657,
                  "name": "_publicationLicenceNo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1576:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1475:136:2"
            },
            "returnParameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1662,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1641:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1640:9:2"
            },
            "scope": 1791,
            "src": "1448:707:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1724,
              "nodeType": "Block",
              "src": "2225:69:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1716,
                          "name": "licences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "2235:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                            "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                          }
                        },
                        "id": 1718,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1717,
                          "name": "_licence_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1711,
                          "src": "2244:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2235:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_storage",
                          "typeString": "struct LicenceManager.Licence storage ref"
                        }
                      },
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1570,
                      "src": "2235:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                        "typeString": "enum LicenceManager.LicenceStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1720,
                        "name": "LicenceStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2266:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LicenceStatus_$1562_$",
                          "typeString": "type(enum LicenceManager.LicenceStatus)"
                        }
                      },
                      "id": 1721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Revoked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2266:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                        "typeString": "enum LicenceManager.LicenceStatus"
                      }
                    },
                    "src": "2235:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                      "typeString": "enum LicenceManager.LicenceStatus"
                    }
                  },
                  "id": 1723,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:52:2"
                }
              ]
            },
            "documentation": null,
            "id": 1725,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1714,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1713,
                  "name": "onlyRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1596,
                  "src": "2212:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2212:12:2"
              }
            ],
            "name": "revokeLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "name": "_licence_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1725,
                  "src": "2184:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2183:21:2"
            },
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:0:2"
            },
            "scope": 1791,
            "src": "2161:133:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1737,
              "nodeType": "Block",
              "src": "2412:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1733,
                      "name": "licenceOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1579,
                      "src": "2429:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 1735,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1734,
                      "name": "_user_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "2443:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2429:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1732,
                  "id": 1736,
                  "nodeType": "Return",
                  "src": "2422:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 1738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicenceForUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1727,
                  "name": "_user_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "2327:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2326:18:2"
            },
            "returnParameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1731,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "2390:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1729,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2390:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1730,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2390:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2389:18:2"
            },
            "scope": 1791,
            "src": "2300:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1776,
              "nodeType": "Block",
              "src": "2589:303:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1752,
                          "name": "_licence_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1740,
                          "src": "2607:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2621:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2607:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5a65726f7468206c6963656e6365206973206e6f742076616c6964",
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2624:29:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14d33be5fe829f82a1992ffb1c70dc80130d7788ab17e074e2bcced7d7c2aa90",
                          "typeString": "literal_string \"Zeroth licence is not valid\""
                        },
                        "value": "Zeroth licence is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14d33be5fe829f82a1992ffb1c70dc80130d7788ab17e074e2bcced7d7c2aa90",
                          "typeString": "literal_string \"Zeroth licence is not valid\""
                        }
                      ],
                      "id": 1751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7186,
                        7187
                      ],
                      "referencedDeclaration": 7187,
                      "src": "2599:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1757,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:55:2"
                },
                {
                  "assignments": [
                    1759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1759,
                      "name": "_licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "2664:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1758,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1571,
                        "src": "2664:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$1571_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1763,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1760,
                      "name": "licences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "2690:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Licence_$1571_storage_$dyn_storage",
                        "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                      }
                    },
                    "id": 1762,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1761,
                      "name": "_licence_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "2699:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2690:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$1571_storage",
                      "typeString": "struct LicenceManager.Licence storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2664:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1764,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "2742:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1564,
                        "src": "2742:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1766,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "2773:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 1767,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publication_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1566,
                        "src": "2773:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1768,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "2810:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicationLicenceNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1568,
                        "src": "2810:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1771,
                              "name": "_licence",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "2859:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Licence_$1571_memory_ptr",
                                "typeString": "struct LicenceManager.Licence memory"
                              }
                            },
                            "id": 1772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1570,
                            "src": "2859:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_LicenceStatus_$1562",
                              "typeString": "enum LicenceManager.LicenceStatus"
                            }
                          ],
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2853:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": "uint8"
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2853:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1774,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2728:157:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 1750,
                  "id": 1775,
                  "nodeType": "Return",
                  "src": "2721:164:2"
                }
              ]
            },
            "documentation": null,
            "id": 1777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "name": "_licence_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2485:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2484:21:2"
            },
            "returnParameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2551:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2560:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1747,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2569:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "2578:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2550:34:2"
            },
            "scope": 1791,
            "src": "2465:427:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1789,
              "nodeType": "Block",
              "src": "3022:60:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1785,
                      "name": "publicationLicences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "3039:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 1787,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1786,
                      "name": "_publication_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1779,
                      "src": "3059:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3039:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1784,
                  "id": 1788,
                  "nodeType": "Return",
                  "src": "3032:43:2"
                }
              ]
            },
            "documentation": null,
            "id": 1790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicationLicences",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1779,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "2930:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2929:25:2"
            },
            "returnParameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1783,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "3000:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1781,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3000:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1782,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3000:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2999:18:2"
            },
            "scope": 1791,
            "src": "2898:184:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1792,
        "src": "358:2726:2"
      }
    ],
    "src": "0:3085:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-12-01T06:30:58.547Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function."
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeMint(address,uint256)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeMint(address,uint256,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "_data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}