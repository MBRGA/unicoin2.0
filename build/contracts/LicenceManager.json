{
  "contractName": "LicenceManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "licenceOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "licences",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "buyer_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "publication_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "publicationLicenceNo",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "publicationLicences",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_unicoinRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_buyer_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publication_Id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicationLicenceNo",
          "type": "uint256"
        }
      ],
      "name": "registerNewLicence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_user_Id",
          "type": "uint256"
        }
      ],
      "name": "getLicenceForUser",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_licence_Id",
          "type": "uint256"
        }
      ],
      "name": "getLicence",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_publication_Id",
          "type": "uint256"
        }
      ],
      "name": "getPublicationLicences",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_licence_Id\",\"type\":\"uint256\"}],\"name\":\"getLicence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_user_Id\",\"type\":\"uint256\"}],\"name\":\"getLicenceForUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_publication_Id\",\"type\":\"uint256\"}],\"name\":\"getPublicationLicences\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_unicoinRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"licenceOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"licences\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"buyer_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publication_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicationLicenceNo\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"publicationLicences\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buyer_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publication_Id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicationLicenceNo\",\"type\":\"uint256\"}],\"name\":\"registerNewLicence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function.\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeMint(address,uint256)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeMint(address,uint256,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol\":\"LicenceManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol\":{\"keccak256\":\"0xf0f51197f3c577ee5c251ec2de6a7a1d39c74ba3b1812a9ccaf2541142a95546\",\"urls\":[\"bzz-raw://aafe1677e98ef033d44b80bc068b6ec4f24e60d6f4d2b72876b169b8c6176ab4\",\"dweb:/ipfs/QmXGPVoHoV6TTEPWGr89koNnRpSWbZ2D1DEVJX8eAtP4ZT\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcc02740f27fa64fcd3237e531390e7091c0d1a597c1e3c315412e6edfcb56e98\",\"urls\":[\"bzz-raw://435140748ea8a6aef64fb8be8e92547bc73b55715487959f8a38cae981c3be5b\",\"dweb:/ipfs/QmWzaYxa7Bvpb8AifSw3Au6hB2VdevwL66xyzr6objJoqs\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x46b471beac241540af38bf756c5c15b1662ede1c6826bdbda1865daa975e17e2\",\"urls\":[\"bzz-raw://284575184b15dc9e8f2d5b5fe0af433348ab272f35715d63b78e9824e735f200\",\"dweb:/ipfs/QmfRwqexUjB4bBtmxsYBQa631jLAVPBgjoXUcGRrh3d7iA\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xab7e889faecf8ec36150e7a3837819cb30c46a46f53eaac72ac1f8e1d824d150\",\"urls\":[\"bzz-raw://b2e7ae9ad2df0fd4d1916d8c5af0f9df214a8986ad7fa49cf656affbd5778cf5\",\"dweb:/ipfs/QmXScSEGENRaqaq95SqtQUDG1UXNi58fB8USMRM5HqwMqb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x05716424b99aa883c7dd4eb4c32cd75a19c9fdfddaede038dd5fb1da2377e21e\",\"urls\":[\"bzz-raw://1f34d0a534e323b399b66cd212b3caafb7d257398999eacb6153a7850931f0c7\",\"dweb:/ipfs/QmcpNsTGmbGyGM8SvbusKbCW4FWQSka3u3rxVLY1bAwajq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0x907766c86fad66a29fb7a3c8828f484b19c05cac392d924ff9125ddda86f7192\",\"urls\":[\"bzz-raw://71e1c3f4f08d2453d4efd60df31aca2d92395de8132af5cf7933ae0f53224fee\",\"dweb:/ipfs/QmXw3z7VeSMcttKeH5uC5CZ9as45AufWJS4kYyPWkojGzV\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzz-raw://5f003d160f9b7a296d724fd58e3ef545dab049536d089d0e5af4c9984db55a7e\",\"dweb:/ipfs/QmaZHGFYVa89vvjHq7uxQhg3P5vaAhY323VYEpuuma4us2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf83b0e3cfc9d22e6ab413d8881a7e55384a9ebfd1d78ab8b9ce4f0cb6ee2fcf8\",\"urls\":[\"bzz-raw://e618ab3e1bb35d7f98c80213b5c0d563c3d47ecf9bf701b0cce3b1bcbefe815a\",\"dweb:/ipfs/QmeRYHm9BZ67gM4QCdrN3mecRAbVMrB3pRoo26jwoZWvdr\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x60806040526141fa806100136000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638832e6e31161011a578063af5485a8116100ad578063c87b56dd1161007c578063c87b56dd14610eea578063d628d54014610f91578063e985e9c514610fdd578063f8ede44a14611059578063fbd9d2eb146110a5576101fb565b8063af5485a814610cef578063b88d4fde14610d51578063bb44aee314610e56578063c4d66de814610ea6576101fb565b806398650275116100e95780639865027514610bd3578063a144819414610bdd578063a22cb46514610c43578063aa271e1a14610c93576101fb565b80638832e6e31461098c57806395d89b4114610a895780639787bb4114610b0c578063983b2d5614610b8f576101fb565b80632f745c59116101925780634f6ccce7116101615780634f6ccce71461087a5780636352211e146108bc57806370a082311461092a5780638129fc1c14610982576101fb565b80632f745c59146105f257806340c10f191461065457806342842e0e146106ba5780634cd88b7614610728576101fb565b8063095ea7b3116101ce578063095ea7b3146104c857806318160ddd1461051657806323b872dd146105345780632cedebee146105a2576101fb565b806301ffc9a71461020057806306fdde0314610265578063077f224a146102e8578063081812fc1461045a575b600080fd5b61024b6004803603602081101561021657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611128565b604051808215151515815260200191505060405180910390f35b61026d611190565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ad578082015181840152602081019050610292565b50505050905090810190601f1680156102da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610458600480360360608110156102fe57600080fd5b810190808035906020019064010000000081111561031b57600080fd5b82018360208201111561032d57600080fd5b8035906020019184600183028401116401000000008311171561034f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103b257600080fd5b8201836020820111156103c457600080fd5b803590602001918460018302840111640100000000831117156103e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611232565b005b6104866004803603602081101561047057600080fd5b8101908080359060200190929190505050611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610514600480360360408110156104de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a1565b005b61051e611688565b6040518082815260200191505060405180910390f35b6105a06004803603606081101561054a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611695565b005b6105ce600480360360208110156105b857600080fd5b810190808035906020019092919050505061170b565b60405180848152602001838152602001828152602001935050505060405180910390f35b61063e6004803603604081101561060857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061177c565b6040518082815260200191505060405180910390f35b6106a06004803603604081101561066a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061183b565b604051808215151515815260200191505060405180910390f35b610726600480360360608110156106d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118b6565b005b6108786004803603604081101561073e57600080fd5b810190808035906020019064010000000081111561075b57600080fd5b82018360208201111561076d57600080fd5b8035906020019184600183028401116401000000008311171561078f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107f257600080fd5b82018360208201111561080457600080fd5b8035906020019184600183028401116401000000008311171561082657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118d6565b005b6108a66004803603602081101561089057600080fd5b8101908080359060200190929190505050611a26565b6040518082815260200191505060405180910390f35b6108e8600480360360208110156108d257600080fd5b8101908080359060200190929190505050611aa6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61096c6004803603602081101561094057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b6e565b6040518082815260200191505060405180910390f35b61098a611c43565b005b610a6f600480360360608110156109a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109e957600080fd5b8201836020820111156109fb57600080fd5b80359060200191846001830284011164010000000083111715610a1d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d63565b604051808215151515815260200191505060405180910390f35b610a91611de0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ad1578082015181840152602081019050610ab6565b50505050905090810190601f168015610afe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b3860048036036020811015610b2257600080fd5b8101908080359060200190929190505050611e82565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610b7b578082015181840152602081019050610b60565b505050509050019250505060405180910390f35b610bd160048036036020811015610ba557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eee565b005b610bdb611f5f565b005b610c2960048036036040811015610bf357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f71565b604051808215151515815260200191505060405180910390f35b610c9160048036036040811015610c5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611fec565b005b610cd560048036036020811015610ca957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121a4565b604051808215151515815260200191505060405180910390f35b610d4f60048036036080811015610d0557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506121c2565b005b610e5460048036036080811015610d6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610dce57600080fd5b820183602082011115610de057600080fd5b80359060200191846001830284011164010000000083111715610e0257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612401565b005b610e8260048036036020811015610e6c57600080fd5b8101908080359060200190929190505050612479565b60405180848152602001838152602001828152602001935050505060405180910390f35b610ee860048036036020811015610ebc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124b1565b005b610f1660048036036020811015610f0057600080fd5b81019080803590602001909291905050506125cb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f56578082015181840152602081019050610f3b565b50505050905090810190601f168015610f835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610fc760048036036040811015610fa757600080fd5b8101908080359060200190929190803590602001909291905050506126de565b6040518082815260200191505060405180910390f35b61103f60048036036040811015610ff357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061270d565b604051808215151515815260200191505060405180910390f35b61108f6004803603604081101561106f57600080fd5b8101908080359060200190929190803590602001909291905050506127a1565b6040518082815260200191505060405180910390f35b6110d1600480360360208110156110bb57600080fd5b81019080803590602001909291905050506127d0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156111145780820151818401526020810190506110f9565b505050509050019250505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112285780601f106111fd57610100808354040283529160200191611228565b820191906000526020600020905b81548152906001019060200180831161120b57829003601f168201915b5050505050905090565b600060019054906101000a900460ff1680611251575061125061283c565b5b8061126857506000809054906101000a900460ff16155b6112bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561130d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61131561284d565b61131d611c43565b61132784846118d6565b611330336124b1565b816101a160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061019e6040518060600160405280600081526020016000815260200160008152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000155602082015181600101556040820151816002015550505080156114005760008060016101000a81548160ff0219169083151502179055505b50505050565b600061141182612964565b611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614074602c913960400191505060405180910390fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006114ac82611aa6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611533576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141486021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166115526129d6565b73ffffffffffffffffffffffffffffffffffffffff16148061158157506115808161157b6129d6565b61270d565b5b6115d6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180613f986038913960400191505060405180910390fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000609e80549050905090565b6116a66116a06129d6565b826129de565b6116fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806141696031913960400191505060405180910390fd5b611706838383612ad2565b505050565b6000806000611718613df8565b61019e858154811061172657fe5b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b600061178783611b6e565b82106117de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613eeb602b913960400191505060405180910390fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061182857fe5b9060005260206000200154905092915050565b600061184d6118486129d6565b6121a4565b6118a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806140236030913960400191505060405180910390fd5b6118ac8383612af6565b6001905092915050565b6118d183838360405180602001604052806000815250612401565b505050565b600060019054906101000a900460ff16806118f557506118f461283c565b5b8061190c57506000809054906101000a900460ff16155b611961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156119b1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6119b9612b17565b6119c257600080fd5b8260d290805190602001906119d8929190613e19565b508160d390805190602001906119ef929190613e19565b50611a00635b5e139f60e01b612b2e565b8015611a215760008060016101000a81548160ff0219169083151502179055505b505050565b6000611a30611688565b8210611a87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061419a602c913960400191505060405180910390fd5b609e8281548110611a9457fe5b90600052602060002001549050919050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613ffa6029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613fd0602a913960400191505060405180910390fd5b611c3c606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612c37565b9050919050565b600060019054906101000a900460ff1680611c625750611c6161283c565b5b80611c7957506000809054906101000a900460ff16155b611cce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d1e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d26612b17565b611d2f57600080fd5b611d3f63780e9d6360e01b612b2e565b8015611d605760008060016101000a81548160ff0219169083151502179055505b50565b6000611d75611d706129d6565b6121a4565b611dca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806140236030913960400191505060405180910390fd5b611dd5848484612c45565b600190509392505050565b606060d38054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e785780601f10611e4d57610100808354040283529160200191611e78565b820191906000526020600020905b815481529060010190602001808311611e5b57829003601f168201915b5050505050905090565b606061019f6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611ee257602002820191906000526020600020905b815481526020019060010190808311611ece575b50505050509050919050565b611efe611ef96129d6565b6121a4565b611f53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806140236030913960400191505060405180910390fd5b611f5c81612cb6565b50565b611f6f611f6a6129d6565b612d11565b565b6000611f83611f7e6129d6565b6121a4565b611fd8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806140236030913960400191505060405180910390fd5b611fe28383612d6c565b6001905092915050565b611ff46129d6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612095576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80606960006120a26129d6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661214f6129d6565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006121bb82610139612d8a90919063ffffffff16565b9050919050565b6101a160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e206f6e6c792062652063616c6c6564206279207265676973747279000081525060200191505060405180910390fd5b61228e613df8565b60405180606001604052808581526020018481526020018381525090506000600161019e8390806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001015560408201518160020155505003905061019f60008681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506101a06000858152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550612387868261183b565b6123f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4c6963656e6365206d696e74696e67206661696c65640000000000000000000081525060200191505060405180910390fd5b505050505050565b61241261240c6129d6565b836129de565b612467576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806141696031913960400191505060405180910390fd5b61247384848484612e68565b50505050565b61019e818154811061248757fe5b90600052602060002090600302016000915090508060000154908060010154908060020154905083565b600060019054906101000a900460ff16806124d057506124cf61283c565b5b806124e757506000809054906101000a900460ff16155b61253c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561258c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612594612b17565b61259d57600080fd5b6125a682612eda565b80156125c75760008060016101000a81548160ff0219169083151502179055505b5050565b60606125d682612964565b61262b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614119602f913960400191505060405180910390fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126d25780601f106126a7576101008083540402835291602001916126d2565b820191906000526020600020905b8154815290600101906020018083116126b557829003601f168201915b50505050509050919050565b6101a060205281600052604060002081815481106126f857fe5b90600052602060002001600091509150505481565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61019f60205281600052604060002081815481106127bb57fe5b90600052602060002001600091509150505481565b60606101a0600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561283057602002820191906000526020600020905b81548152602001906001019080831161281c575b50505050509050919050565b600080303b90506000811491505090565b600060019054906101000a900460ff168061286c575061286b61283c565b5b8061288357506000809054906101000a900460ff16155b6128d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612928576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612930612ff1565b6129406380ac58cd60e01b612b2e565b80156129615760008060016101000a81548160ff0219169083151502179055505b50565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b60006129e982612964565b612a3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613f6c602c913960400191505060405180910390fd5b6000612a4983611aa6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612ab857508373ffffffffffffffffffffffffffffffffffffffff16612aa084611406565b73ffffffffffffffffffffffffffffffffffffffff16145b80612ac95750612ac8818561270d565b5b91505092915050565b612add838383613100565b612ae7838261335b565b612af182826134f9565b505050565b612b0082826135c0565b612b0a82826134f9565b612b13816137d8565b5050565b6000612b296380ac58cd60e01b611128565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415612bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081600001549050919050565b612c4f8383612af6565b612c5c6000848484613824565b612cb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613f166032913960400191505060405180910390fd5b505050565b612ccb81610139613a1490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b612d2681610139613aef90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b612d86828260405180602001604052806000815250612c45565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806140a06022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612e73848484612ad2565b612e7f84848484613824565b612ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613f166032913960400191505060405180910390fd5b50505050565b600060019054906101000a900460ff1680612ef95750612ef861283c565b5b80612f1057506000809054906101000a900460ff16155b612f65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612fb5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612fbe826121a4565b612fcc57612fcb82612cb6565b5b8015612fed5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680613010575061300f61283c565b5b8061302757506000809054906101000a900460ff16155b61307c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806140c2602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156130cc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6130dc6301ffc9a760e01b612b2e565b80156130fd5760008060016101000a81548160ff0219169083151502179055505b50565b8273ffffffffffffffffffffffffffffffffffffffff1661312082611aa6565b73ffffffffffffffffffffffffffffffffffffffff161461318c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806140f06029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613212576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613f486024913960400191505060405180910390fd5b61321b81613bac565b613262606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c6a565b6132a9606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c8d565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006133b36001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613ca390919063ffffffff16565b90506000609d60008481526020019081526020016000205490508181146134a0576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061342057fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061347857fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036134f29190613e99565b5050505050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613663576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61366c81612964565b156136df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613778606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c8d565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60006138458473ffffffffffffffffffffffffffffffffffffffff16613ced565b6138525760019050613a0c565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a026138786129d6565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613934578082015181840152602081019050613919565b50505050905090810190601f1680156139615780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561398357600080fd5b505af1158015613997573d6000803e3d6000fd5b505050506040513d60208110156139ad57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b613a1e8282612d8a565b15613a91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613af98282612d8a565b613b4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140536021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613c675760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613c8260018260000154613ca390919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613ce583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613d38565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015613d2f5750808214155b92505050919050565b6000838311158290613de5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613daa578082015181840152602081019050613d8f565b50505050905090810190601f168015613dd75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180606001604052806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613e5a57805160ff1916838001178555613e88565b82800160010185558215613e88579182015b82811115613e87578251825591602001919060010190613e6c565b5b509050613e959190613ec5565b5090565b815481835581811115613ec057818360005260206000209182019101613ebf9190613ec5565b5b505050565b613ee791905b80821115613ee3576000816000905550600101613ecb565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a7231582095607d8c87b89b398f6ce3f08c3addb3785ea1e5fbf7c418c26619a03e16d05064736f6c634300050c0032",
  "deployedBytecode": "",
  "sourceMap": "357:2289:1:-;;;;;;;;;",
  "deployedSourceMap": "357:2289:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;357:2289:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:131:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1008:131:16;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1435:83:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1435:83:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:392:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;937:392:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;937:392:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;937:392:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;937:392:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;937:392:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;937:392:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;937:392:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;937:392:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;937:392:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4538:200:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4538:200:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3838:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3838:415:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2454:94:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6184:287:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6184:287:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2134:319:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2134:319:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:229:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:229:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;673:132:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;673:132:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7120::21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7120:132:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;871:321:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;871:321:24;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:321:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:321:24;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:321:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:321:24;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:321:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:321:24;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:321:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:321:24;;;;;;;;;;;;;;;:::i;:::-;;2886:196:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2886:196:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3194:223:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3194:223:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2768:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2768:207:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1316:242:22;;;:::i;:::-;;1514:167:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1514:167:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1514:167:25;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1514:167:25;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1514:167:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1514:167:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1627:87:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1627:87:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:159:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1969:159:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1969:159:1;;;;;;;;;;;;;;;;;756:90:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;756:90:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;852:77;;;:::i;:::-;;1053:140:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1053:140:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5031:249:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5031:249:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;643:107:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;643:107:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1335:628:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1335:628:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7975:269:21;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7975:269:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7975:269:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7975:269:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7975:269:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7975:269:21;;;;;;;;;;;;;;;:::i;:::-;;556:25:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;556:25:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;284:148:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;284:148:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;1914:202:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1914:202:24;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1914:202:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:56:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;729:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5602:145:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5602:145:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;629:50:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;629:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2459:184;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2459:184:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2459:184:1;;;;;;;;;;;;;;;;;1008:131:16;1076:4;1099:20;:33;1120:11;1099:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:40;;1008:131;;;:::o;1435:83:24:-;1474:13;1506:5;1499:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:83;:::o;937:392:1:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1086:19:1;:17;:19::i;:::-;1115:29;:27;:29::i;:::-;1154:41;1180:5;1187:7;1154:25;:41::i;:::-;1205:37;1231:10;1205:25;:37::i;:::-;1264:16;1253:8;;:27;;;;;;;;;;;;;;;;;;1291:8;1305:16;;;;;;;;1313:1;1305:16;;;;1316:1;1305:16;;;;1319:1;1305:16;;;1291:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1291:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;937:392:1;;;;:::o;4538:200:21:-;4597:7;4624:16;4632:7;4624;:16::i;:::-;4616:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4707:15;:24;4723:7;4707:24;;;;;;;;;;;;;;;;;;;;;4700:31;;4538:200;;;:::o;3838:415::-;3901:13;3917:16;3925:7;3917;:16::i;:::-;3901:32;;3957:5;3951:11;;:2;:11;;;;3943:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4035:5;4019:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4044:37;4061:5;4068:12;:10;:12::i;:::-;4044:16;:37::i;:::-;4019:62;4011:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4201:2;4174:15;:24;4190:7;4174:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4238:7;4234:2;4218:28;;4227:5;4218:28;;;;;;;;;;;;3838:415;;;:::o;2454:94:22:-;2498:7;2524:10;:17;;;;2517:24;;2454:94;:::o;6184:287:21:-;6326:41;6345:12;:10;:12::i;:::-;6359:7;6326:18;:41::i;:::-;6318:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:32;6446:4;6452:2;6456:7;6432:13;:32::i;:::-;6184:287;;;:::o;2134:319:1:-;2220:7;2229;2238;2261:23;;:::i;:::-;2287:8;2296:11;2287:21;;;;;;;;;;;;;;;;;;2261:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:8;:17;;;2370:8;:23;;;2407:8;:29;;;2318:128;;;;;;;2134:319;;;;;:::o;2072:229:22:-;2152:7;2187:16;2197:5;2187:9;:16::i;:::-;2179:5;:24;2171:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:12;:19;2281:5;2268:19;;;;;;;;;;;;;;;2288:5;2268:26;;;;;;;;;;;;;;;;2261:33;;2072:229;;;;:::o;673:132:25:-;743:4;544:22:14;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:18:25;765:2;769:7;759:5;:18::i;:::-;794:4;787:11;;673:132;;;;:::o;7120::21:-;7206:39;7223:4;7229:2;7233:7;7206:39;;;;;;;;;;;;:16;:39::i;:::-;7120:132;;;:::o;871:321:24:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;970:28:24;:26;:28::i;:::-;962:37;;;;;;1018:4;1010:5;:12;;;;;;;;;;;;:::i;:::-;;1042:6;1032:7;:16;;;;;;;;;;;;:::i;:::-;;1136:49;805:10;1155:29;;1136:18;:49::i;:::-;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;871:321:24;;;:::o;2886:196:22:-;2944:7;2979:13;:11;:13::i;:::-;2971:5;:21;2963:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:10;3069:5;3058:17;;;;;;;;;;;;;;;;3051:24;;2886:196;;;:::o;3194:223:21:-;3249:7;3268:13;3284:11;:20;3296:7;3284:20;;;;;;;;;;;;;;;;;;;;;3268:36;;3339:1;3322:19;;:5;:19;;;;3314:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:5;3398:12;;;3194:223;;;:::o;2768:207::-;2823:7;2867:1;2850:19;;:5;:19;;;;2842:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2934:34;:17;:24;2952:5;2934:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2927:41;;2768:207;;;:::o;1316:242:22:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1375:28:22;:26;:28::i;:::-;1367:37;;;;;;1500:51;1249:10;1519:31;;1500:18;:51::i;:::-;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1316:242:22;:::o;1514:167:25:-;1608:4;544:22:14;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:29:25;1634:2;1638:7;1647:5;1624:9;:29::i;:::-;1670:4;1663:11;;1514:167;;;;;:::o;1627:87:24:-;1668:13;1700:7;1693:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:87;:::o;1969:159:1:-;2059:16;2098:13;:23;2112:8;2098:23;;;;;;;;;;;2091:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:159;;;:::o;756:90:14:-;544:22;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1053:140:25:-;1127:4;544:22:14;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:22:25;1153:2;1157:7;1143:9;:22::i;:::-;1182:4;1175:11;;1053:140;;;;:::o;5031:249:21:-;5116:12;:10;:12::i;:::-;5110:18;;:2;:18;;;;5102:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5208:8;5169:18;:32;5188:12;:10;:12::i;:::-;5169:32;;;;;;;;;;;;;;;:36;5202:2;5169:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5260:2;5231:42;;5246:12;:10;:12::i;:::-;5231:42;;;5264:8;5231:42;;;;;;;;;;;;;;;;;;;;;;5031:249;;:::o;643:107:14:-;699:4;722:21;735:7;722:8;:12;;:21;;;;:::i;:::-;715:28;;643:107;;;:::o;1335:628:1:-;848:8;;;;;;;;;;;834:22;;:10;:22;;;826:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:22;;:::i;:::-;1554:104;;;;;;;;1575:9;1554:104;;;;1598:15;1554:104;;;;1627:21;1554:104;;;1529:129;;1668:18;1714:1;1689:8;1703:7;1689:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1689:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26;1668:47;;1726:13;:24;1740:9;1726:24;;;;;;;;;;;1756:10;1726:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1726:41:1;;;;;;;;;;;;;;;;;;;;;;1777:19;:36;1797:15;1777:36;;;;;;;;;;;1819:10;1777:53;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1777:53:1;;;;;;;;;;;;;;;;;;;;;;1862:46;1882:13;1897:10;1862:19;:46::i;:::-;1841:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:1;;1335:628;;;;:::o;7975:269:21:-;8089:41;8108:12;:10;:12::i;:::-;8122:7;8089:18;:41::i;:::-;8081:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8194:43;8212:4;8218:2;8222:7;8231:5;8194:17;:43::i;:::-;7975:269;;;;:::o;556:25:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;284:148:25:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;357:28:25;:26;:28::i;:::-;349:37;;;;;;396:29;418:6;396:21;:29::i;:::-;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;284:148:25;;:::o;1914:202:24:-;1972:13;2005:16;2013:7;2005;:16::i;:::-;1997:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:10;:19;2101:7;2090:19;;;;;;;;;;;2083:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:202;;;:::o;729:56:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5602:145:21:-;5682:4;5705:18;:25;5724:5;5705:25;;;;;;;;;;;;;;;:35;5731:8;5705:35;;;;;;;;;;;;;;;;;;;;;;;;;5698:42;;5602:145;;;;:::o;629:50:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2459:184::-;2561:16;2600:19;:36;2620:15;2600:36;;;;;;;;;;;2593:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:184;;;:::o;1409:467:31:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;2230:205:21:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2281:19:21;:17;:19::i;:::-;2388:40;2213:10;2407:20;;2388:18;:40::i;:::-;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2230:205:21;:::o;9415:152::-;9472:4;9488:13;9504:11;:20;9516:7;9504:20;;;;;;;;;;;;;;;;;;;;;9488:36;;9558:1;9541:19;;:5;:19;;;;9534:26;;;9415:152;;;:::o;867:96:9:-;912:15;946:10;939:17;;867:96;:::o;9928:329:21:-;10013:4;10037:16;10045:7;10037;:16::i;:::-;10029:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:13;10128:16;10136:7;10128;:16::i;:::-;10112:32;;10173:5;10162:16;;:7;:16;;;:51;;;;10206:7;10182:31;;:20;10194:7;10182:11;:20::i;:::-;:31;;;10162:51;:87;;;;10217:32;10234:5;10241:7;10217:16;:32::i;:::-;10162:87;10154:96;;;9928:329;;;;:::o;3457:239:22:-;3542:38;3562:4;3568:2;3572:7;3542:19;:38::i;:::-;3591:47;3624:4;3630:7;3591:32;:47::i;:::-;3649:40;3677:2;3681:7;3649:27;:40::i;:::-;3457:239;;;:::o;3953:196::-;4016:24;4028:2;4032:7;4016:11;:24::i;:::-;4051:40;4079:2;4083:7;4051:27;:40::i;:::-;4102;4134:7;4102:31;:40::i;:::-;3953:196;;:::o;2441:123:21:-;2495:4;2518:39;2213:10;2536:20;;2518:17;:39::i;:::-;2511:46;;2441:123;:::o;1533:190:16:-;1623:10;1608:25;;:11;:25;;;;;1600:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:4;1676:20;:33;1697:11;1676:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1533:190;:::o;1065:112:15:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11487:239:21:-;11574:18;11580:2;11584:7;11574:5;:18::i;:::-;11610:54;11641:1;11645:2;11649:7;11658:5;11610:22;:54::i;:::-;11602:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11487:239;;;:::o;935:119:14:-;991:21;1004:7;991:8;:12;;:21;;;;:::i;:::-;1039:7;1027:20;;;;;;;;;;;;935:119;:::o;1060:127::-;1119:24;1135:7;1119:8;:15;;:24;;;;:::i;:::-;1172:7;1158:22;;;;;;;;;;;;1060:127;:::o;10786:100:21:-;10853:26;10863:2;10867:7;10853:26;;;;;;;;;;;;:9;:26::i;:::-;10786:100;;:::o;779:200:13:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8951:269:21:-;9060:32;9074:4;9080:2;9084:7;9060:13;:32::i;:::-;9110:48;9133:4;9139:2;9143:7;9152:5;9110:22;:48::i;:::-;9102:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8951:269;;;;:::o;361:137:14:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;431:16:14;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;:::-;426:66;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;361:137:14;;:::o;624:234:16:-;1024:12:31;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;811:40:16;461:10;830:20;;811:18;:40::i;:::-;1268:14:31;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;624:234:16;:::o;13538:447:21:-;13651:4;13631:24;;:16;13639:7;13631;:16::i;:::-;:24;;;13623:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13733:1;13719:16;;:2;:16;;;;13711:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13787:23;13802:7;13787:14;:23::i;:::-;13821:35;:17;:23;13839:4;13821:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13866:33;:17;:21;13884:2;13866:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13933:2;13910:11;:20;13922:7;13910:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13970:7;13966:2;13951:27;;13960:4;13951:27;;;;;;;;;;;;13538:447;;;:::o;6567:1128:22:-;6829:22;6854:32;6884:1;6854:12;:18;6867:4;6854:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6829:57;;6896:18;6917:17;:26;6935:7;6917:26;;;;;;;;;;;;6896:47;;7061:14;7047:10;:28;7043:323;;7091:19;7113:12;:18;7126:4;7113:18;;;;;;;;;;;;;;;7132:14;7113:34;;;;;;;;;;;;;;;;7091:56;;7195:11;7162:12;:18;7175:4;7162:18;;;;;;;;;;;;;;;7181:10;7162:30;;;;;;;;;;;;;;;:44;;;;7311:10;7278:17;:30;7296:11;7278:30;;;;;;;;;;;:43;;;;7043:323;;7452:12;:18;7465:4;7452:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6567:1128;;;;:::o;5411:183::-;5524:12;:16;5537:2;5524:16;;;;;;;;;;;;;;;:23;;;;5495:17;:26;5513:7;5495:26;;;;;;;;;;;:52;;;;5557:12;:16;5570:2;5557:16;;;;;;;;;;;;;;;5579:7;5557:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5557:30:22;;;;;;;;;;;;;;;;;;;;;;5411:183;;:::o;11971:327:21:-;12056:1;12042:16;;:2;:16;;;;12034:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12114:16;12122:7;12114;:16::i;:::-;12113:17;12105:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12197:2;12174:11;:20;12186:7;12174:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12209:33;:17;:21;12227:2;12209:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12283:7;12279:2;12258:33;;12275:1;12258:33;;;;;;;;;;;;11971:327;;:::o;5789:161:22:-;5892:10;:17;;;;5865:15;:24;5881:7;5865:24;;;;;;;;;;;:44;;;;5919:10;5935:7;5919:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5919:24:22;;;;;;;;;;;;;;;;;;;;;;5789:161;:::o;14574:349:21:-;14695:4;14720:15;:2;:13;;;:15::i;:::-;14715:58;;14758:4;14751:11;;;;14715:58;14783:13;14815:2;14799:36;;;14836:12;:10;:12::i;:::-;14850:4;14856:7;14865:5;14799:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14799:72:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14799:72:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14799:72:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14799:72:21;;;;;;;;;;;;;;;;14783:88;;831:10;14899:16;;14889:26;;;:6;:26;;;;14881:35;;;14574:349;;;;;;;:::o;260:175:13:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;15085:171:21:-;15184:1;15148:38;;:15;:24;15164:7;15148:24;;;;;;;;;;;;;;;;;;;;;:38;;;15144:106;;15237:1;15202:15;:24;15218:7;15202:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15144:106;15085:171;:::o;1278:108:15:-;1358:21;1377:1;1358:7;:14;;;:18;;:21;;;;:::i;:::-;1341:7;:14;;:38;;;;1278:108;:::o;1183:89::-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;1274:134:18:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;557:797:30:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o;1732:187:18:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;357:2289:1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.12;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\";\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol\";\ncontract LicenceManager is Initializable, ERC721Full, ERC721Mintable {\n    struct Licence {\n        uint256 buyer_Id;\n        uint256 publication_Id;\n        uint256 publicationLicenceNo;\n    }\n\n    Licence[] public licences;\n    // user Id to their array of licences\n    mapping(uint256 => uint256[]) public licenceOwners;\n    // licence Id to get the publication Id\n    mapping(uint256 => uint256[]) public publicationLicences;\n\n    modifier onlyRegistry() {\n        require(msg.sender == registry, \"Can only be called by registry\");\n        _;\n    }\n\n    address registry;\n    function initialize(\n        string memory _name,\n        string memory _symbol,\n        address _unicoinRegistry\n    ) public initializer {\n        ERC721.initialize();\n        ERC721Enumerable.initialize();\n        ERC721Metadata.initialize(_name, _symbol);\n        ERC721Mintable.initialize(msg.sender);\n\n        registry = _unicoinRegistry;\n\n        licences.push(Licence(0, 0, 0));\n    }\n\n    function registerNewLicence(\n        address _ownerAddress,\n        uint256 _buyer_Id,\n        uint256 _publication_Id,\n        uint256 _publicationLicenceNo\n    ) public onlyRegistry {\n        Licence memory licence = Licence(\n            _buyer_Id,\n            _publication_Id,\n            _publicationLicenceNo\n        );\n        uint256 licence_Id = licences.push(licence) - 1;\n\n        licenceOwners[_buyer_Id].push(licence_Id);\n        publicationLicences[_publication_Id].push(licence_Id);\n\n        require(\n            ERC721Mintable.mint(_ownerAddress, licence_Id),\n            \"Licence minting failed\"\n        );\n    }\n\n    function getLicenceForUser(uint256 _user_Id)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        return licenceOwners[_user_Id];\n    }\n\n    function getLicence(uint256 _licence_Id)\n        public\n        view\n        returns (uint256, uint256, uint256)\n    {\n        Licence memory _licence = licences[_licence_Id];\n        return (\n            _licence.buyer_Id,\n            _licence.publication_Id,\n            _licence.publicationLicenceNo\n        );\n    }\n\n    function getPublicationLicences(uint256 _publication_Id)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        return publicationLicences[_publication_Id];\n    }\n\n}\n",
  "sourcePath": "/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol",
    "exportedSymbols": {
      "LicenceManager": [
        705
      ]
    },
    "id": 706,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 504,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 505,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 5694,
        "src": "26:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 506,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 4741,
        "src": "88:84:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "id": 507,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 5125,
        "src": "174:88:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 508,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 5378,
        "src": "264:92:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 509,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5693,
              "src": "384:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$5693",
                "typeString": "contract Initializable"
              }
            },
            "id": 510,
            "nodeType": "InheritanceSpecifier",
            "src": "384:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 511,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5124,
              "src": "399:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$5124",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 512,
            "nodeType": "InheritanceSpecifier",
            "src": "399:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 513,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5377,
              "src": "411:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$5377",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 514,
            "nodeType": "InheritanceSpecifier",
            "src": "411:14:1"
          }
        ],
        "contractDependencies": [
          2425,
          3291,
          3401,
          3411,
          4740,
          5105,
          5124,
          5281,
          5377,
          5483,
          5513,
          5539,
          5693
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 705,
        "linearizedBaseContracts": [
          705,
          5377,
          3291,
          5124,
          5281,
          5539,
          5105,
          5513,
          4740,
          5483,
          3401,
          3411,
          2425,
          5693
        ],
        "name": "LicenceManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LicenceManager.Licence",
            "id": 521,
            "members": [
              {
                "constant": false,
                "id": 516,
                "name": "buyer_Id",
                "nodeType": "VariableDeclaration",
                "scope": 521,
                "src": "457:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 515,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "457:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 518,
                "name": "publication_Id",
                "nodeType": "VariableDeclaration",
                "scope": 521,
                "src": "483:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 517,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "483:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 520,
                "name": "publicationLicenceNo",
                "nodeType": "VariableDeclaration",
                "scope": 521,
                "src": "515:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 519,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "515:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Licence",
            "nodeType": "StructDefinition",
            "scope": 705,
            "src": "432:118:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 524,
            "name": "licences",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "556:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
              "typeString": "struct LicenceManager.Licence[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 522,
                "name": "Licence",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 521,
                "src": "556:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Licence_$521_storage_ptr",
                  "typeString": "struct LicenceManager.Licence"
                }
              },
              "id": 523,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "556:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage_ptr",
                "typeString": "struct LicenceManager.Licence[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 529,
            "name": "licenceOwners",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "629:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 528,
              "keyType": {
                "id": 525,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "637:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "629:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 526,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "648:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 527,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "648:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 534,
            "name": "publicationLicences",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "729:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 533,
              "keyType": {
                "id": 530,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "737:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "729:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 531,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "748:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 532,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "748:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "816:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 537,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5708,
                            "src": "834:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "834:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "848:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "834:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c6564206279207265676973747279",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:32:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        },
                        "value": "Can only be called by registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5711,
                        5712
                      ],
                      "referencedDeclaration": 5712,
                      "src": "826:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "826:65:1"
                },
                {
                  "id": 544,
                  "nodeType": "PlaceholderStatement",
                  "src": "901:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 546,
            "name": "onlyRegistry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:2:1"
            },
            "src": "792:117:1",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 548,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "915:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "915:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "1076:253:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4740,
                        "src": "1086:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4740_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4145,
                      "src": "1086:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 564,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5105,
                        "src": "1115:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$5105_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4792,
                      "src": "1115:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "1180:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "1187:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 569,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "1154:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$5281_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5180,
                      "src": "1154:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5708,
                          "src": "1231:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1231:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "ERC721Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "1205:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$5377_$",
                          "typeString": "type(contract ERC721Mintable)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5312,
                      "src": "1205:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 583,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1253:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 584,
                      "name": "_unicoinRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "1264:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1253:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1313:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1316:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1319:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 590,
                          "name": "Licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "1305:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Licence_$521_storage_ptr_$",
                            "typeString": "type(struct LicenceManager.Licence storage pointer)"
                          }
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1305:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$521_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Licence_$521_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "licences",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1291:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
                          "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1291:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$521_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 557,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 556,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5674,
                  "src": "1064:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1064:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "966:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "995:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "name": "_unicoinRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "1026:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:100:1"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:1"
            },
            "scope": 705,
            "src": "937:392:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "1519:444:1",
              "statements": [
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "name": "licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "1529:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 611,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 521,
                        "src": "1529:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$521_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 618,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "_buyer_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1575:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 615,
                        "name": "_publication_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "1598:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "_publicationLicenceNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "1627:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "name": "Licence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "1554:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Licence_$521_storage_ptr_$",
                        "typeString": "type(struct LicenceManager.Licence storage pointer)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$521_memory",
                      "typeString": "struct LicenceManager.Licence memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1529:129:1"
                },
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "name": "licence_Id",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "1668:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 623,
                          "name": "licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "1703:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 621,
                          "name": "licences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "1689:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
                            "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1689:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$521_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1689:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1714:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1689:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "1756:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 628,
                          "name": "licenceOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "1726:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 630,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 629,
                          "name": "_buyer_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "1740:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1726:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1726:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "1819:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 635,
                          "name": "publicationLicences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "1777:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 637,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 636,
                          "name": "_publication_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "1797:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1777:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1777:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 645,
                            "name": "_ownerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "1882:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 646,
                            "name": "licence_Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "1897:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 643,
                            "name": "ERC721Mintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5377,
                            "src": "1862:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$5377_$",
                              "typeString": "type(contract ERC721Mintable)"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5331,
                          "src": "1862:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1862:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6963656e6365206d696e74696e67206661696c6564",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1922:24:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        },
                        "value": "Licence minting failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        }
                      ],
                      "id": 642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5711,
                        5712
                      ],
                      "referencedDeclaration": 5712,
                      "src": "1841:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:115:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:115:1"
                }
              ]
            },
            "documentation": null,
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 609,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 608,
                  "name": "onlyRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 546,
                  "src": "1506:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:12:1"
              }
            ],
            "name": "registerNewLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1372:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "name": "_buyer_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1403:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1430:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "name": "_publicationLicenceNo",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1463:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1362:136:1"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1519:0:1"
            },
            "scope": 705,
            "src": "1335:628:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "2081:47:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 660,
                      "name": "licenceOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "2098:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "_user_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "2112:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2098:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 659,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "2091:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicenceForUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "name": "_user_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1996:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1995:18:1"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "2059:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 656,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2059:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 657,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2059:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2058:18:1"
            },
            "scope": 705,
            "src": "1969:159:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "2251:202:1",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "name": "_licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "2261:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 676,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 521,
                        "src": "2261:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$521_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 678,
                      "name": "licences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "2287:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
                        "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                      }
                    },
                    "id": 680,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "_licence_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "2296:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2287:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$521_storage",
                      "typeString": "struct LicenceManager.Licence storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2261:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2339:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 516,
                        "src": "2339:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2370:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publication_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 518,
                        "src": "2370:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2407:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicationLicenceNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 520,
                        "src": "2407:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 688,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2325:121:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "2318:128:1"
                }
              ]
            },
            "documentation": null,
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "_licence_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2154:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2154:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2153:21:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2220:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2229:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2238:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2238:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2219:27:1"
            },
            "scope": 705,
            "src": "2134:319:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "2583:60:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 699,
                      "name": "publicationLicences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "2600:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 701,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 700,
                      "name": "_publication_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "2620:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2600:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 698,
                  "id": 702,
                  "nodeType": "Return",
                  "src": "2593:43:1"
                }
              ]
            },
            "documentation": null,
            "id": 704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicationLicences",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "2491:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2490:25:1"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "2561:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 695,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2561:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 696,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2561:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2560:18:1"
            },
            "scope": 705,
            "src": "2459:184:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 706,
        "src": "357:2289:1"
      }
    ],
    "src": "0:2647:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/unicoindapp/contracts/LicenceManager.sol",
    "exportedSymbols": {
      "LicenceManager": [
        705
      ]
    },
    "id": 706,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 504,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 505,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 5694,
        "src": "26:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 506,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 4741,
        "src": "88:84:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "id": 507,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 5125,
        "src": "174:88:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 508,
        "nodeType": "ImportDirective",
        "scope": 706,
        "sourceUnit": 5378,
        "src": "264:92:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 509,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5693,
              "src": "384:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$5693",
                "typeString": "contract Initializable"
              }
            },
            "id": 510,
            "nodeType": "InheritanceSpecifier",
            "src": "384:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 511,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5124,
              "src": "399:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$5124",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 512,
            "nodeType": "InheritanceSpecifier",
            "src": "399:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 513,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5377,
              "src": "411:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$5377",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 514,
            "nodeType": "InheritanceSpecifier",
            "src": "411:14:1"
          }
        ],
        "contractDependencies": [
          2425,
          3291,
          3401,
          3411,
          4740,
          5105,
          5124,
          5281,
          5377,
          5483,
          5513,
          5539,
          5693
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 705,
        "linearizedBaseContracts": [
          705,
          5377,
          3291,
          5124,
          5281,
          5539,
          5105,
          5513,
          4740,
          5483,
          3401,
          3411,
          2425,
          5693
        ],
        "name": "LicenceManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LicenceManager.Licence",
            "id": 521,
            "members": [
              {
                "constant": false,
                "id": 516,
                "name": "buyer_Id",
                "nodeType": "VariableDeclaration",
                "scope": 521,
                "src": "457:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 515,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "457:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 518,
                "name": "publication_Id",
                "nodeType": "VariableDeclaration",
                "scope": 521,
                "src": "483:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 517,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "483:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 520,
                "name": "publicationLicenceNo",
                "nodeType": "VariableDeclaration",
                "scope": 521,
                "src": "515:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 519,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "515:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Licence",
            "nodeType": "StructDefinition",
            "scope": 705,
            "src": "432:118:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 524,
            "name": "licences",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "556:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
              "typeString": "struct LicenceManager.Licence[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 522,
                "name": "Licence",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 521,
                "src": "556:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Licence_$521_storage_ptr",
                  "typeString": "struct LicenceManager.Licence"
                }
              },
              "id": 523,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "556:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage_ptr",
                "typeString": "struct LicenceManager.Licence[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 529,
            "name": "licenceOwners",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "629:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 528,
              "keyType": {
                "id": 525,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "637:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "629:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 526,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "648:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 527,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "648:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 534,
            "name": "publicationLicences",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "729:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 533,
              "keyType": {
                "id": 530,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "737:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "729:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 531,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "748:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 532,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "748:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "816:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 537,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5708,
                            "src": "834:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "834:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "848:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "834:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c6564206279207265676973747279",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:32:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        },
                        "value": "Can only be called by registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815976a9e063805a95bda15df7bcca1cf59592fa4720d7a8a2e651827dfdb73",
                          "typeString": "literal_string \"Can only be called by registry\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5711,
                        5712
                      ],
                      "referencedDeclaration": 5712,
                      "src": "826:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "826:65:1"
                },
                {
                  "id": 544,
                  "nodeType": "PlaceholderStatement",
                  "src": "901:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 546,
            "name": "onlyRegistry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:2:1"
            },
            "src": "792:117:1",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 548,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "915:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "915:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "1076:253:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4740,
                        "src": "1086:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4740_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4145,
                      "src": "1086:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 564,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5105,
                        "src": "1115:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$5105_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4792,
                      "src": "1115:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "1180:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "1187:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 569,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "1154:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$5281_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5180,
                      "src": "1154:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5708,
                          "src": "1231:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1231:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "ERC721Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "1205:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$5377_$",
                          "typeString": "type(contract ERC721Mintable)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5312,
                      "src": "1205:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 583,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1253:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 584,
                      "name": "_unicoinRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "1264:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1253:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1313:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1316:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1319:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 590,
                          "name": "Licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "1305:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Licence_$521_storage_ptr_$",
                            "typeString": "type(struct LicenceManager.Licence storage pointer)"
                          }
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1305:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$521_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Licence_$521_memory",
                          "typeString": "struct LicenceManager.Licence memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "licences",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1291:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
                          "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1291:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$521_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 557,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 556,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5674,
                  "src": "1064:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1064:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "966:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "995:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "name": "_unicoinRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "1026:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:100:1"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:1"
            },
            "scope": 705,
            "src": "937:392:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "1519:444:1",
              "statements": [
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "name": "licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "1529:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 611,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 521,
                        "src": "1529:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$521_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 618,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "_buyer_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1575:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 615,
                        "name": "_publication_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "1598:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "_publicationLicenceNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "1627:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "name": "Licence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "1554:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Licence_$521_storage_ptr_$",
                        "typeString": "type(struct LicenceManager.Licence storage pointer)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$521_memory",
                      "typeString": "struct LicenceManager.Licence memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1529:129:1"
                },
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "name": "licence_Id",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "1668:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 623,
                          "name": "licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "1703:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 621,
                          "name": "licences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "1689:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
                            "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1689:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Licence_$521_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct LicenceManager.Licence storage ref) returns (uint256)"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1689:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1714:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1689:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "1756:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 628,
                          "name": "licenceOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "1726:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 630,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 629,
                          "name": "_buyer_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "1740:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1726:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1726:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "licence_Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "1819:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 635,
                          "name": "publicationLicences",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "1777:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 637,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 636,
                          "name": "_publication_Id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "1797:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1777:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1777:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 645,
                            "name": "_ownerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "1882:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 646,
                            "name": "licence_Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "1897:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 643,
                            "name": "ERC721Mintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5377,
                            "src": "1862:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$5377_$",
                              "typeString": "type(contract ERC721Mintable)"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5331,
                          "src": "1862:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1862:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6963656e6365206d696e74696e67206661696c6564",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1922:24:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        },
                        "value": "Licence minting failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41b4fc8d577566f6a967c89112386bb8f35efda17bb0e1d60ddfaeebe08c369a",
                          "typeString": "literal_string \"Licence minting failed\""
                        }
                      ],
                      "id": 642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5711,
                        5712
                      ],
                      "referencedDeclaration": 5712,
                      "src": "1841:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:115:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:115:1"
                }
              ]
            },
            "documentation": null,
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 609,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 608,
                  "name": "onlyRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 546,
                  "src": "1506:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:12:1"
              }
            ],
            "name": "registerNewLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1372:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "name": "_buyer_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1403:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1430:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "name": "_publicationLicenceNo",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "1463:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1362:136:1"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1519:0:1"
            },
            "scope": 705,
            "src": "1335:628:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "2081:47:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 660,
                      "name": "licenceOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "2098:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "_user_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "2112:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2098:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 659,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "2091:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicenceForUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "name": "_user_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1996:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1995:18:1"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "2059:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 656,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2059:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 657,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2059:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2058:18:1"
            },
            "scope": 705,
            "src": "1969:159:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "2251:202:1",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "name": "_licence",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "2261:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                        "typeString": "struct LicenceManager.Licence"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 676,
                        "name": "Licence",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 521,
                        "src": "2261:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Licence_$521_storage_ptr",
                          "typeString": "struct LicenceManager.Licence"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 678,
                      "name": "licences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "2287:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Licence_$521_storage_$dyn_storage",
                        "typeString": "struct LicenceManager.Licence storage ref[] storage ref"
                      }
                    },
                    "id": 680,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 679,
                      "name": "_licence_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "2296:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2287:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Licence_$521_storage",
                      "typeString": "struct LicenceManager.Licence storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2261:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2339:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 516,
                        "src": "2339:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2370:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publication_Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 518,
                        "src": "2370:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "_licence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2407:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Licence_$521_memory_ptr",
                            "typeString": "struct LicenceManager.Licence memory"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicationLicenceNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 520,
                        "src": "2407:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 688,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2325:121:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "2318:128:1"
                }
              ]
            },
            "documentation": null,
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLicence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "_licence_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2154:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2154:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2153:21:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2220:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2229:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2238:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2238:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2219:27:1"
            },
            "scope": 705,
            "src": "2134:319:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "2583:60:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 699,
                      "name": "publicationLicences",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "2600:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 701,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 700,
                      "name": "_publication_Id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "2620:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2600:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 698,
                  "id": 702,
                  "nodeType": "Return",
                  "src": "2593:43:1"
                }
              ]
            },
            "documentation": null,
            "id": 704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicationLicences",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "name": "_publication_Id",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "2491:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2490:25:1"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "2561:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 695,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2561:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 696,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2561:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2560:18:1"
            },
            "scope": 705,
            "src": "2459:184:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 706,
        "src": "357:2289:1"
      }
    ],
    "src": "0:2647:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "links": {},
      "events": {},
      "address": "0x2D8f2FF8DbF3FA09cF4a97178822d3C7dfC6406b",
      "updated_at": 1574866103000
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-27T14:14:19.101Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function."
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeMint(address,uint256)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeMint(address,uint256,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "_data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}