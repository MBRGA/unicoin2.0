/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AuctionManagerContract } from "./AuctionManager";
import { BasePaymasterContract } from "./BasePaymaster";
import { BaseRelayRecipientContract } from "./BaseRelayRecipient";
import { ContextUpgradeableContract } from "./ContextUpgradeable";
import { ERC165Contract } from "./ERC165";
import { ERC165UpgradeableContract } from "./ERC165Upgradeable";
import { ERC20Contract } from "./ERC20";
import { ERC20MockContract } from "./ERC20Mock";
import { ERC20UpgradeableContract } from "./ERC20Upgradeable";
import { ERC2771ContextUpgradeableContract } from "./ERC2771ContextUpgradeable";
import { ERC721Contract } from "./ERC721";
import { ERC721EnumerableContract } from "./ERC721Enumerable";
import { ERC721FullContract } from "./ERC721Full";
import { ERC721MetadataContract } from "./ERC721Metadata";
import { ERC721MintableContract } from "./ERC721Mintable";
import { ERC721UpgradeableContract } from "./ERC721Upgradeable";
import { GsnEip712LibraryContract } from "./GsnEip712Library";
import { GSNRecipientContract } from "./GSNRecipient";
import { HarbergerTaxManagerContract } from "./HarbergerTaxManager";
import { IAuctionManagerContract } from "./IAuctionManager";
import { ICERC20Contract } from "./ICERC20";
import { IERC165Contract } from "./IERC165";
import { IERC165UpgradeableContract } from "./IERC165Upgradeable";
import { IERC20Contract } from "./IERC20";
import { IERC20MetadataContract } from "./IERC20Metadata";
import { IERC20MetadataUpgradeableContract } from "./IERC20MetadataUpgradeable";
import { IERC20UpgradeableContract } from "./IERC20Upgradeable";
import { IERC721Contract } from "./IERC721";
import { IERC721EnumerableContract } from "./IERC721Enumerable";
import { IERC721MetadataContract } from "./IERC721Metadata";
import { IERC721MetadataUpgradeableContract } from "./IERC721MetadataUpgradeable";
import { IERC721ReceiverContract } from "./IERC721Receiver";
import { IERC721ReceiverUpgradeableContract } from "./IERC721ReceiverUpgradeable";
import { IERC721UpgradeableContract } from "./IERC721Upgradeable";
import { IForwarderContract } from "./IForwarder";
import { IHarbergerTaxManagerContract } from "./IHarbergerTaxManager";
import { ILicenceManagerContract } from "./ILicenceManager";
import { InitializableContract } from "./Initializable";
import { IPaymasterContract } from "./IPaymaster";
import { IPublicationManagerContract } from "./IPublicationManager";
import { IRelayHubContract } from "./IRelayHub";
import { IRelayRecipientContract } from "./IRelayRecipient";
import { IStakeManagerContract } from "./IStakeManager";
import { IUserManagerContract } from "./IUserManager";
import { IVaultContract } from "./IVault";
import { LicenceManagerContract } from "./LicenceManager";
import { MigrationsContract } from "./Migrations";
import { MinterRoleContract } from "./MinterRole";
import { OwnableContract } from "./Ownable";
import { PublicationManagerContract } from "./PublicationManager";
import { UnicoinBaseContract } from "./UnicoinBase";
import { UnicoinPaymasterContract } from "./UnicoinPaymaster";
import { UnicoinRegistryContract } from "./UnicoinRegistry";
import { UserManagerContract } from "./UserManager";
import { VaultContract } from "./Vault";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AuctionManager"): AuctionManagerContract;
      require(name: "BasePaymaster"): BasePaymasterContract;
      require(name: "BaseRelayRecipient"): BaseRelayRecipientContract;
      require(name: "ContextUpgradeable"): ContextUpgradeableContract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "ERC165Upgradeable"): ERC165UpgradeableContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Mock"): ERC20MockContract;
      require(name: "ERC20Upgradeable"): ERC20UpgradeableContract;
      require(
        name: "ERC2771ContextUpgradeable"
      ): ERC2771ContextUpgradeableContract;
      require(name: "ERC721"): ERC721Contract;
      require(name: "ERC721Enumerable"): ERC721EnumerableContract;
      require(name: "ERC721Full"): ERC721FullContract;
      require(name: "ERC721Metadata"): ERC721MetadataContract;
      require(name: "ERC721Mintable"): ERC721MintableContract;
      require(name: "ERC721Upgradeable"): ERC721UpgradeableContract;
      require(name: "GsnEip712Library"): GsnEip712LibraryContract;
      require(name: "GSNRecipient"): GSNRecipientContract;
      require(name: "HarbergerTaxManager"): HarbergerTaxManagerContract;
      require(name: "IAuctionManager"): IAuctionManagerContract;
      require(name: "ICERC20"): ICERC20Contract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "IERC165Upgradeable"): IERC165UpgradeableContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IERC20Metadata"): IERC20MetadataContract;
      require(
        name: "IERC20MetadataUpgradeable"
      ): IERC20MetadataUpgradeableContract;
      require(name: "IERC20Upgradeable"): IERC20UpgradeableContract;
      require(name: "IERC721"): IERC721Contract;
      require(name: "IERC721Enumerable"): IERC721EnumerableContract;
      require(name: "IERC721Metadata"): IERC721MetadataContract;
      require(
        name: "IERC721MetadataUpgradeable"
      ): IERC721MetadataUpgradeableContract;
      require(name: "IERC721Receiver"): IERC721ReceiverContract;
      require(
        name: "IERC721ReceiverUpgradeable"
      ): IERC721ReceiverUpgradeableContract;
      require(name: "IERC721Upgradeable"): IERC721UpgradeableContract;
      require(name: "IForwarder"): IForwarderContract;
      require(name: "IHarbergerTaxManager"): IHarbergerTaxManagerContract;
      require(name: "ILicenceManager"): ILicenceManagerContract;
      require(name: "Initializable"): InitializableContract;
      require(name: "IPaymaster"): IPaymasterContract;
      require(name: "IPublicationManager"): IPublicationManagerContract;
      require(name: "IRelayHub"): IRelayHubContract;
      require(name: "IRelayRecipient"): IRelayRecipientContract;
      require(name: "IStakeManager"): IStakeManagerContract;
      require(name: "IUserManager"): IUserManagerContract;
      require(name: "IVault"): IVaultContract;
      require(name: "LicenceManager"): LicenceManagerContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "MinterRole"): MinterRoleContract;
      require(name: "Ownable"): OwnableContract;
      require(name: "PublicationManager"): PublicationManagerContract;
      require(name: "UnicoinBase"): UnicoinBaseContract;
      require(name: "UnicoinPaymaster"): UnicoinPaymasterContract;
      require(name: "UnicoinRegistry"): UnicoinRegistryContract;
      require(name: "UserManager"): UserManagerContract;
      require(name: "Vault"): VaultContract;
    }
  }
}

export {
  AuctionManagerContract,
  AuctionManagerInstance,
} from "./AuctionManager";
export { BasePaymasterContract, BasePaymasterInstance } from "./BasePaymaster";
export {
  BaseRelayRecipientContract,
  BaseRelayRecipientInstance,
} from "./BaseRelayRecipient";
export {
  ContextUpgradeableContract,
  ContextUpgradeableInstance,
} from "./ContextUpgradeable";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export {
  ERC165UpgradeableContract,
  ERC165UpgradeableInstance,
} from "./ERC165Upgradeable";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20MockContract, ERC20MockInstance } from "./ERC20Mock";
export {
  ERC20UpgradeableContract,
  ERC20UpgradeableInstance,
} from "./ERC20Upgradeable";
export {
  ERC2771ContextUpgradeableContract,
  ERC2771ContextUpgradeableInstance,
} from "./ERC2771ContextUpgradeable";
export { ERC721Contract, ERC721Instance } from "./ERC721";
export {
  ERC721EnumerableContract,
  ERC721EnumerableInstance,
} from "./ERC721Enumerable";
export { ERC721FullContract, ERC721FullInstance } from "./ERC721Full";
export {
  ERC721MetadataContract,
  ERC721MetadataInstance,
} from "./ERC721Metadata";
export {
  ERC721MintableContract,
  ERC721MintableInstance,
} from "./ERC721Mintable";
export {
  ERC721UpgradeableContract,
  ERC721UpgradeableInstance,
} from "./ERC721Upgradeable";
export {
  GsnEip712LibraryContract,
  GsnEip712LibraryInstance,
} from "./GsnEip712Library";
export { GSNRecipientContract, GSNRecipientInstance } from "./GSNRecipient";
export {
  HarbergerTaxManagerContract,
  HarbergerTaxManagerInstance,
} from "./HarbergerTaxManager";
export {
  IAuctionManagerContract,
  IAuctionManagerInstance,
} from "./IAuctionManager";
export { ICERC20Contract, ICERC20Instance } from "./ICERC20";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export {
  IERC165UpgradeableContract,
  IERC165UpgradeableInstance,
} from "./IERC165Upgradeable";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  IERC20MetadataContract,
  IERC20MetadataInstance,
} from "./IERC20Metadata";
export {
  IERC20MetadataUpgradeableContract,
  IERC20MetadataUpgradeableInstance,
} from "./IERC20MetadataUpgradeable";
export {
  IERC20UpgradeableContract,
  IERC20UpgradeableInstance,
} from "./IERC20Upgradeable";
export { IERC721Contract, IERC721Instance } from "./IERC721";
export {
  IERC721EnumerableContract,
  IERC721EnumerableInstance,
} from "./IERC721Enumerable";
export {
  IERC721MetadataContract,
  IERC721MetadataInstance,
} from "./IERC721Metadata";
export {
  IERC721MetadataUpgradeableContract,
  IERC721MetadataUpgradeableInstance,
} from "./IERC721MetadataUpgradeable";
export {
  IERC721ReceiverContract,
  IERC721ReceiverInstance,
} from "./IERC721Receiver";
export {
  IERC721ReceiverUpgradeableContract,
  IERC721ReceiverUpgradeableInstance,
} from "./IERC721ReceiverUpgradeable";
export {
  IERC721UpgradeableContract,
  IERC721UpgradeableInstance,
} from "./IERC721Upgradeable";
export { IForwarderContract, IForwarderInstance } from "./IForwarder";
export {
  IHarbergerTaxManagerContract,
  IHarbergerTaxManagerInstance,
} from "./IHarbergerTaxManager";
export {
  ILicenceManagerContract,
  ILicenceManagerInstance,
} from "./ILicenceManager";
export { InitializableContract, InitializableInstance } from "./Initializable";
export { IPaymasterContract, IPaymasterInstance } from "./IPaymaster";
export {
  IPublicationManagerContract,
  IPublicationManagerInstance,
} from "./IPublicationManager";
export { IRelayHubContract, IRelayHubInstance } from "./IRelayHub";
export {
  IRelayRecipientContract,
  IRelayRecipientInstance,
} from "./IRelayRecipient";
export { IStakeManagerContract, IStakeManagerInstance } from "./IStakeManager";
export { IUserManagerContract, IUserManagerInstance } from "./IUserManager";
export { IVaultContract, IVaultInstance } from "./IVault";
export {
  LicenceManagerContract,
  LicenceManagerInstance,
} from "./LicenceManager";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export { MinterRoleContract, MinterRoleInstance } from "./MinterRole";
export { OwnableContract, OwnableInstance } from "./Ownable";
export {
  PublicationManagerContract,
  PublicationManagerInstance,
} from "./PublicationManager";
export { UnicoinBaseContract, UnicoinBaseInstance } from "./UnicoinBase";
export {
  UnicoinPaymasterContract,
  UnicoinPaymasterInstance,
} from "./UnicoinPaymaster";
export {
  UnicoinRegistryContract,
  UnicoinRegistryInstance,
} from "./UnicoinRegistry";
export { UserManagerContract, UserManagerInstance } from "./UserManager";
export { VaultContract, VaultInstance } from "./Vault";
