/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IHarbergerTaxManagerContract
  extends Truffle.Contract<IHarbergerTaxManagerInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<IHarbergerTaxManagerInstance>;
}

type AllEvents = never;

export interface IHarbergerTaxManagerInstance extends Truffle.ContractInstance {
  createTaxObject: {
    (
      _licence_Id: number | BN | string,
      _currentAssignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _licence_Id: number | BN | string,
      _currentAssignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;
    sendTransaction(
      _licence_Id: number | BN | string,
      _currentAssignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _licence_Id: number | BN | string,
      _currentAssignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  calculateOutstandingTax(
    _taxObjectId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  calculateMinBuyOutPrice(
    _taxObjectId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  _updateTaxObjectLastPayment: {
    (
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  _updateTaxObjectValuation: {
    (
      _taxObjectId: number | BN | string,
      _assignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _taxObjectId: number | BN | string,
      _assignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _taxObjectId: number | BN | string,
      _assignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _taxObjectId: number | BN | string,
      _assignedValue: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  submitBuyOut: {
    (
      _taxObject: number | BN | string,
      _offer: number | BN | string,
      _buyOutOwnerAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _taxObject: number | BN | string,
      _offer: number | BN | string,
      _buyOutOwnerAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;
    sendTransaction(
      _taxObject: number | BN | string,
      _offer: number | BN | string,
      _buyOutOwnerAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _taxObject: number | BN | string,
      _offer: number | BN | string,
      _buyOutOwnerAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  finalizeBuyOutOffer: {
    (
      _buyOutId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _buyOutId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;
    sendTransaction(
      _buyOutId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _buyOutId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  revokeTaxObject: {
    (
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  getLicenceTaxObjectId(
    _licenceId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getTaxObject(
    _taxObjectId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{
    licenceId: BN;
    ratePerBlock: BN;
    lastPayment: BN;
    numberOfOutBids: BN;
    currentAssignedValue: BN;
    buyOuts: BN[];
    status: BN;
  }>;

  getBuyOutLicenceId(
    _buyOutId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getBuyOutOwnerAddress(
    _buyOutId: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  getTaxObjectLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  optimalExp(
    x: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  capFunction(
    r: number | BN | string,
    t1: number | BN | string,
    t2: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  futureValue(
    N: number | BN | string,
    r: number | BN | string,
    t1: number | BN | string,
    t2: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  methods: {
    createTaxObject: {
      (
        _licence_Id: number | BN | string,
        _currentAssignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _licence_Id: number | BN | string,
        _currentAssignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<BN>;
      sendTransaction(
        _licence_Id: number | BN | string,
        _currentAssignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _licence_Id: number | BN | string,
        _currentAssignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    calculateOutstandingTax(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    calculateMinBuyOutPrice(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    _updateTaxObjectLastPayment: {
      (
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    _updateTaxObjectValuation: {
      (
        _taxObjectId: number | BN | string,
        _assignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _taxObjectId: number | BN | string,
        _assignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _taxObjectId: number | BN | string,
        _assignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _taxObjectId: number | BN | string,
        _assignedValue: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    submitBuyOut: {
      (
        _taxObject: number | BN | string,
        _offer: number | BN | string,
        _buyOutOwnerAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _taxObject: number | BN | string,
        _offer: number | BN | string,
        _buyOutOwnerAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<BN>;
      sendTransaction(
        _taxObject: number | BN | string,
        _offer: number | BN | string,
        _buyOutOwnerAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _taxObject: number | BN | string,
        _offer: number | BN | string,
        _buyOutOwnerAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    finalizeBuyOutOffer: {
      (
        _buyOutId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _buyOutId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<boolean>;
      sendTransaction(
        _buyOutId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _buyOutId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    revokeTaxObject: {
      (
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _taxObjectId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    getLicenceTaxObjectId(
      _licenceId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getTaxObject(
      _taxObjectId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{
      licenceId: BN;
      ratePerBlock: BN;
      lastPayment: BN;
      numberOfOutBids: BN;
      currentAssignedValue: BN;
      buyOuts: BN[];
      status: BN;
    }>;

    getBuyOutLicenceId(
      _buyOutId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getBuyOutOwnerAddress(
      _buyOutId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    getTaxObjectLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    optimalExp(
      x: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    capFunction(
      r: number | BN | string,
      t1: number | BN | string,
      t2: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    futureValue(
      N: number | BN | string,
      r: number | BN | string,
      t1: number | BN | string,
      t2: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
