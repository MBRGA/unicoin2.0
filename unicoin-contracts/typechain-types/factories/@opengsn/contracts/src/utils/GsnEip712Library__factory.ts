/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GsnEip712Library,
  GsnEip712LibraryInterface,
} from "../../../../../@opengsn/contracts/src/utils/GsnEip712Library";

const _abi = [
  {
    inputs: [],
    name: "EIP712DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERIC_PARAMS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYDATA_TYPE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYDATA_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_SUFFIX",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_TYPE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001a5761050a9081610020823930815050f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c8063066a310c1461018f5780636225e61b14610177578063931cd38f1461015f578063987673f714610119578063abf0d3f414610102578063c46cf83f146100d3578063c49f91d31461009e5763cc0c62b21461007757600080fd5b8160031936011261009a5760209061008d6102eb565b8281519101209051908152f35b5080fd5b508160031936011261009a57602090517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152f35b508160031936011261009a576100fe906100eb6102eb565b90519182916020835260208301906102c6565b0390f35b508160031936011261009a5760209061008d610435565b508160031936011261009a5780516100fe91610134826101a7565b600c82526b14995b185e54995c5d595cdd60a21b6020830152519182916020835260208301906102c6565b508160031936011261009a576100fe906100eb6103d7565b508160031936011261009a576100fe906100eb610435565b508160031936011261009a576100fe906100eb6101fb565b6040810190811067ffffffffffffffff8211176101c357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176101c357604052565b604051906080820182811067ffffffffffffffff8211176101c357604052605d82527f627974657320646174612c75696e743235362076616c6964556e74696c0000006060837f616464726573732066726f6d2c6164647265737320746f2c75696e743235362060208201527f76616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c60408201520152565b918091926000905b8282106102b15750116102aa575050565b6000910152565b91508060209183015181860152018291610299565b906020916102df81518092818552858086019101610291565b601f01601f1916010190565b6040519060e0820182811067ffffffffffffffff8211176101c35760405260a18252602960f81b60c0837f52656c6179446174612875696e743235362067617350726963652c75696e743260208201527f35362070637452656c61794665652c75696e74323536206261736552656c617960408201527f4665652c616464726573732072656c6179576f726b65722c616464726573732060608201527f7061796d61737465722c6164647265737320666f727761726465722c6279746560808201527f73207061796d6173746572446174612c75696e7432353620636c69656e74496460a08201520152565b6103df6102eb565b610432603460405180937f52656c6179446174612072656c6179446174612900000000000000000000000060208301526104228151809260208686019101610291565b81010360148101845201826101d9565b90565b6104876104326022604051610449816101a7565b600c8152602081016b14995b185e54995c5d595cdd60a21b815261046b6101fb565b6104736103d7565b916040519687945180926020870190610291565b8301600560fb1b60208201526104a7825180936020602185019101610291565b01600b60fa1b60218201526104c58251809360208785019101610291565b010360028101845201826101d956fea2646970667358221220360fba63967307293a7e4a9f8b2201b576ba839f7cbeea9c4ce5c9d3c497e8d364736f6c634300080f0033";

type GsnEip712LibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GsnEip712LibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GsnEip712Library__factory extends ContractFactory {
  constructor(...args: GsnEip712LibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GsnEip712Library> {
    return super.deploy(overrides || {}) as Promise<GsnEip712Library>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GsnEip712Library {
    return super.attach(address) as GsnEip712Library;
  }
  override connect(signer: Signer): GsnEip712Library__factory {
    return super.connect(signer) as GsnEip712Library__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GsnEip712LibraryInterface {
    return new utils.Interface(_abi) as GsnEip712LibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GsnEip712Library {
    return new Contract(address, _abi, signerOrProvider) as GsnEip712Library;
  }
}
