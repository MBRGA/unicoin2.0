/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IHarbergerTaxManager,
  IHarbergerTaxManagerInterface,
} from "../../../contracts/interfaces/IHarbergerTaxManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licence_Id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currentAssignedValue",
        type: "uint256",
      },
    ],
    name: "_createTaxObject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyOutId",
        type: "uint256",
      },
    ],
    name: "_finalizeBuyOutOffer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObjectId",
        type: "uint256",
      },
    ],
    name: "_revokeTaxObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObject",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offer",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyOutOwnerAddress",
        type: "address",
      },
    ],
    name: "_submitBuyOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObjectId",
        type: "uint256",
      },
    ],
    name: "_updateTaxObjectLastPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assignedValue",
        type: "uint256",
      },
    ],
    name: "_updateTaxObjectValuation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "N",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
    ],
    name: "calcFutureValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "calcOptimalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObjectId",
        type: "uint256",
      },
    ],
    name: "calculateMinBuyOutPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObjectId",
        type: "uint256",
      },
    ],
    name: "calculateOutstandingTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
    ],
    name: "capFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyOutId",
        type: "uint256",
      },
    ],
    name: "getBuyOutLicenceId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyOutId",
        type: "uint256",
      },
    ],
    name: "getBuyOutOwnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "licenceId",
        type: "uint256",
      },
    ],
    name: "getLicenceTaxObjectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxObjectId",
        type: "uint256",
      },
    ],
    name: "getTaxObject",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "licenceId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ratePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPayment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfOutBids",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentAssignedValue",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "buyOuts",
            type: "uint256[]",
          },
          {
            internalType: "enum SharedStructures.TaxObjectStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructures.TaxObject",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTaxObjectLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IHarbergerTaxManager__factory {
  static readonly abi = _abi;
  static createInterface(): IHarbergerTaxManagerInterface {
    return new utils.Interface(_abi) as IHarbergerTaxManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IHarbergerTaxManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IHarbergerTaxManager;
  }
}
