{
  "contractName": "ERC20Mock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0x7ab308f8906221ff4b664fb52dc6d9b5226f0b9dd2f8a334e05dba26f27003fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22b22b6615efdfe3b7bda4db7b3cad9d7030cccbdf762337d14b0de5475be645\",\"dweb:/ipfs/QmWaYScc3ZDyDvYNpGk81CLbkq2LxPtra1XvfrBfqG3SyP\"]}},\"version\":1}",
  "bytecode": "0x6080346200028857601f196001600160401b03601f620002d23881900382810185168601848111878210176200028d578692829160405283396020958691810103126200028857519262000052620002a3565b906004938483526311dbdb1960e21b878401526200006f620002a3565b600381526211d31160ea1b888201528351938285116200027357600354946001958681811c9116801562000268575b8b821014620002535787811162000207575b50898782118714620001a9575b50505051908111620001945784548381811c9116801562000189575b8882101462000174578481116200012d575b5086938111831462000106575b620001048633620002c3565b005b169260005284600020916000925b84841015620000f8579286019290860190820162000114565b85600052876000208580840160051c8201928a85106200016a575b0160051c019084905b82811062000161575050620000eb565b01849062000151565b9250819262000148565b602286634e487b7160e01b6000525260246000fd5b90607f1690620000d9565b604185634e487b7160e01b6000525260246000fd5b8582169260036000528b6000209360005b8d8a838310620001f2575050508311620001d6575b50620000bd565b01519060f86000199160031b161c1916905538808080620001cf565b859782939686015181550196019301620001ba565b60036000528a6000208880840160051c8201928d851062000249575b0160051c019087905b8281106200023c575050620000b0565b600081550187906200022c565b9250819262000223565b602289634e487b7160e01b6000525260246000fd5b90607f16906200009e565b604187634e487b7160e01b6000525260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200028d57604052565b90620002cf91620002c3565b56fe",
  "deployedBytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461049657508163095ea7b31461046c57816318160ddd1461044d57816323b872dd14610382578163313ce56714610366578163395093511461031757816370a08231146102e157816395d89b41146101c2578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105c9565b6100c26105e4565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105c9565b602435903361061c565b5160018152f35b905082346101bf57826003193601126101bf576101346105c9565b91836024359233815260016020528181206001600160a01b038616825260205220549082821061016e576020856101128585038733610791565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102d7575b60209384841081146102c4578388529081156102a85750600114610253575b505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c925282610572565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838510610294575050505083010185808061020a565b80548886018301529301928490820161027e565b60ff1916878501525050151560051b840101905085808061020a565b634e487b7160e01b895260228a52602489fd5b91607f16916101eb565b5050346100e55760203660031901126100e557806020926001600160a01b036103086105c9565b16815280845220549051908152f35b5050346100e557806003193601126100e55761011260209261035f61033a6105c9565b91338152600186528481206001600160a01b03841682528652846024359120546105fa565b9033610791565b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e55761039e6105c9565b6103a66105e4565b9184604435946001600160a01b0384168152600160205281812033825260205220549060001982036103e1575b60208661011287878761061c565b84821061040a57509183916103ff6020969561011295033383610791565b9193948193506103d3565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e55760209061011261048c6105c9565b6024359033610791565b8490843461056e578260031936011261056e5782600354600181811c90808316928315610564575b60209384841081146102c4578388529081156102a8575060011461050e57505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c925282610572565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838510610550575050505083010185808061020a565b80548886018301529301928490820161053a565b91607f16916104be565b8280fd5b919091602080825283519081818401526000945b8286106105b35750508060409394116105a6575b601f01601f1916010190565b600083828401015261059a565b8581018201518487016040015294810194610586565b600435906001600160a01b03821682036105df57565b600080fd5b602435906001600160a01b03821682036105df57565b81198111610606570190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0380911691821561073e57169182156106ed5760008281528060205260408120549180831061069957604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965282865203828220558681522061068e8282546105fa565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0380911691821561084257169182156107f25760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220515357ffbcb5cc4dfd7026b2fcfb40bb1b05aa86c7d0cda07db220a803d25cdf64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "115:261:38:-:0;;;;-1:-1:-1;;;;;;;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;115:261:38;;;;;;:::i;:::-;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;-1:-1:-1;234:13:38;222:10;;234:13;:::i;:::-;-1:-1:-1;115:261:38;;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;-1:-1:-1;115:261:38;;;;;;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;-1:-1:-1;115:261:38;;-1:-1:-1;115:261:38;;;;;;-1:-1:-1;115:261:38;;;;;-1:-1:-1;115:261:38;;;;;;;;;-1:-1:-1;;;;;115:261:38;;;;;;;;;;:::o;261:113::-;;359:7;261:113;359:7;:::i;:::-;261:113::o",
  "deployedSourceMap": "115:261:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:261:38;;;;;4091:11:17;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3883:6:17;115:261:38;;:::i;:::-;;;719:10:20;;3883:6:17;:::i;:::-;115:261:38;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:20;;115:261:38;;;;;;;;-1:-1:-1;;;;;115:261:38;;;;;;;;6811:35:17;;;;115:261:38;;;;6947:34:17;115:261:38;;;;719:10:20;6947:34:17;:::i;115:261:38:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;-1:-1:-1;;115:261:38;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:261:38;;;;;-1:-1:-1;;115:261:38;;;;;;;;-1:-1:-1;115:261:38;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:261:38;;;;;;;-1:-1:-1;;;;;115:261:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6040:38:17;115:261:38;;6040:38:17;115:261:38;;:::i;:::-;719:10:20;;115:261:38;;;;;;;;-1:-1:-1;;;;;115:261:38;;;;;;;;;;;;6040:38:17;:::i;:::-;719:10:20;;6040:38:17;:::i;115:261:38:-;;;;;;;;;;;;;;;;;3175:2:17;115:261:38;;;;;;;;;;;;-1:-1:-1;;115:261:38;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;115:261:38;;;;;;;;;;719:10:20;115:261:38;;;;;;10986:17:17;;;10966:37;;10962:243;;115:261:38;;5443:6:17;;;;;;:::i;10962:243::-;11027:26;;;115:261:38;;;;;;11154:25:17;115:261:38;;;5443:6:17;115:261:38;;719:10:20;11154:25:17;;:::i;:::-;10962:243;;;;;;;;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3331:12:17;115:261:38;;;;;;;;;;;;;;;;;;;;;;;4595:6:17;115:261:38;;:::i;:::-;;;719:10:20;;4595:6:17;:::i;115:261:38:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;-1:-1:-1;;115:261:38;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;115:261:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:261:38;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;115:261:38;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;115:261:38;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;7484:651:17;-1:-1:-1;;;;;115:261:38;;;7610:18:17;;;115:261:38;;;7688:16:17;;;115:261:38;;7626:1:17;115:261:38;;;;;;;;;;7859:21:17;;;;115:261:38;;;;;8054:26:17;115:261:38;;;;;;;;;;;;;;;;;8015:23:17;115:261:38;;;8015:23:17;:::i;:::-;115:261:38;;;;;;;8054:26:17;7484:651::o;115:261:38:-;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;10119:370:17;-1:-1:-1;;;;;115:261:38;;;10250:19:17;;;115:261:38;;;10328:21:17;;;115:261:38;;;10450:32:17;115:261:38;;10267:1:17;115:261:38;10399:11:17;115:261:38;;;10267:1:17;115:261:38;;10267:1:17;115:261:38;;;;;10267:1:17;115:261:38;;;;;;;10450:32:17;10119:370::o;115:261:38:-;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:261:38;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Mock is ERC20 {\n\n    constructor(uint256 initialSupply) ERC20(\"Gold\", \"GLD\") {\n        _mint(msg.sender, initialSupply);\n    }\n\n    function _mint(address _recipient, uint256 _supply) internal override {\n        _mint(_recipient, _supply);\n    }\n}\n",
  "sourcePath": "/home/azureuser/unicoin/unicoin2.0/contracts/mocks/ERC20Mock.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/ERC20Mock.sol",
    "exportedSymbols": {
      "Context": [
        3453
      ],
      "ERC20": [
        3328
      ],
      "ERC20Mock": [
        8531
      ],
      "IERC20": [
        3406
      ],
      "IERC20Metadata": [
        3431
      ]
    },
    "id": 8532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8497,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:38"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 8498,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8532,
        "sourceUnit": 3329,
        "src": "58:55:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8499,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3328,
              "src": "137:5:38"
            },
            "id": 8500,
            "nodeType": "InheritanceSpecifier",
            "src": "137:5:38"
          }
        ],
        "canonicalName": "ERC20Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8531,
        "linearizedBaseContracts": [
          8531,
          3328,
          3431,
          3406,
          3453
        ],
        "name": "ERC20Mock",
        "nameLocation": "124:9:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8515,
              "nodeType": "Block",
              "src": "206:49:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "222:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "222:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8512,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8502,
                        "src": "234:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8509,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8530
                      ],
                      "referencedDeclaration": 8530,
                      "src": "216:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "216:32:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8514,
                  "nodeType": "ExpressionStatement",
                  "src": "216:32:38"
                }
              ]
            },
            "id": 8516,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "476f6c64",
                    "id": 8505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "191:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff",
                      "typeString": "literal_string \"Gold\""
                    },
                    "value": "Gold"
                  },
                  {
                    "hexValue": "474c44",
                    "id": 8506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "199:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f549cfa71a021ddf7dd7510221f2f14a897d67c2ddb8a226325f7c5bfd11fcff",
                      "typeString": "literal_string \"GLD\""
                    },
                    "value": "GLD"
                  }
                ],
                "id": 8507,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8504,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3328,
                  "src": "185:5:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "185:20:38"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8502,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "170:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 8516,
                  "src": "162:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "162:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "161:23:38"
            },
            "returnParameters": {
              "id": 8508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:0:38"
            },
            "scope": 8531,
            "src": "150:105:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3145
            ],
            "body": {
              "id": 8529,
              "nodeType": "Block",
              "src": "331:43:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8525,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8518,
                        "src": "347:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8526,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8520,
                        "src": "359:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8524,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8530
                      ],
                      "referencedDeclaration": 8530,
                      "src": "341:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "341:26:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8528,
                  "nodeType": "ExpressionStatement",
                  "src": "341:26:38"
                }
              ]
            },
            "id": 8530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "270:5:38",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "322:8:38"
            },
            "parameters": {
              "id": 8521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8518,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "284:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 8530,
                  "src": "276:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8520,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "304:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 8530,
                  "src": "296:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:37:38"
            },
            "returnParameters": {
              "id": 8523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:38"
            },
            "scope": 8531,
            "src": "261:113:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8532,
        "src": "115:261:38",
        "usedErrors": []
      }
    ],
    "src": "33:344:38"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/mocks/ERC20Mock.sol",
    "exportedSymbols": {
      "Context": [
        3453
      ],
      "ERC20": [
        3328
      ],
      "ERC20Mock": [
        8531
      ],
      "IERC20": [
        3406
      ],
      "IERC20Metadata": [
        3431
      ]
    },
    "id": 8532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8497,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:38"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 8498,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8532,
        "sourceUnit": 3329,
        "src": "58:55:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8499,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3328,
              "src": "137:5:38"
            },
            "id": 8500,
            "nodeType": "InheritanceSpecifier",
            "src": "137:5:38"
          }
        ],
        "canonicalName": "ERC20Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8531,
        "linearizedBaseContracts": [
          8531,
          3328,
          3431,
          3406,
          3453
        ],
        "name": "ERC20Mock",
        "nameLocation": "124:9:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8515,
              "nodeType": "Block",
              "src": "206:49:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "222:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "222:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8512,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8502,
                        "src": "234:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8509,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8530
                      ],
                      "referencedDeclaration": 8530,
                      "src": "216:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "216:32:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8514,
                  "nodeType": "ExpressionStatement",
                  "src": "216:32:38"
                }
              ]
            },
            "id": 8516,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "476f6c64",
                    "id": 8505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "191:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6f0d47b12e2c2f7083eb5622541f9c3930e56fc3e46e89e132673f05a079baff",
                      "typeString": "literal_string \"Gold\""
                    },
                    "value": "Gold"
                  },
                  {
                    "hexValue": "474c44",
                    "id": 8506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "199:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f549cfa71a021ddf7dd7510221f2f14a897d67c2ddb8a226325f7c5bfd11fcff",
                      "typeString": "literal_string \"GLD\""
                    },
                    "value": "GLD"
                  }
                ],
                "id": 8507,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8504,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3328,
                  "src": "185:5:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "185:20:38"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8502,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "170:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 8516,
                  "src": "162:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "162:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "161:23:38"
            },
            "returnParameters": {
              "id": 8508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:0:38"
            },
            "scope": 8531,
            "src": "150:105:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3145
            ],
            "body": {
              "id": 8529,
              "nodeType": "Block",
              "src": "331:43:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8525,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8518,
                        "src": "347:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8526,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8520,
                        "src": "359:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8524,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8530
                      ],
                      "referencedDeclaration": 8530,
                      "src": "341:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "341:26:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8528,
                  "nodeType": "ExpressionStatement",
                  "src": "341:26:38"
                }
              ]
            },
            "id": 8530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "270:5:38",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "322:8:38"
            },
            "parameters": {
              "id": 8521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8518,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "284:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 8530,
                  "src": "276:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8520,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "304:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 8530,
                  "src": "296:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:37:38"
            },
            "returnParameters": {
              "id": 8523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:38"
            },
            "scope": 8531,
            "src": "261:113:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8532,
        "src": "115:261:38",
        "usedErrors": []
      }
    ],
    "src": "33:344:38"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "links": {},
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "address": "0xFc7B4AdF06811CB9C9D235898272923Ba081950f",
      "updated_at": 1578376128789,
      "transactionHash": "0xd915e8b0ef4aacebd27a102333cbb92880148fdd29780c5b992c66d49511c9de"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-06-18T19:39:02.098Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}