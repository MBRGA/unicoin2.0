/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UserManager,
  UserManagerInterface,
} from "../../contracts/UserManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicoinRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_profileUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "_registerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "isAddressRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "profileUri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0346100e357601f6109d238819003918201601f19168301916001600160401b038311848410176100e85780849260409485528339810103126100e357610052602061004b836100fe565b92016100fe565b60805261005d610175565b90816100cf575b60a052610094575b60405161081c90816101b682396080518181816105cd01526107a9015260a051816102990152f35b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a161006c565b61010061ff00196000541617600055610064565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e357565b1561011957565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60005460ff8160081c166000146101975750610192303b15610112565b600090565b806101a8600160ff81941610610112565b60ff19161760005560019056fe60808060405260048036101561001457600080fd5b60003560e01c9182632b956ff7146106335750816338b6a3a1146105f4578163572b6c05146105a35781636ec3877f14610227575080638129fc1c146101b65763a87430ba1461006357600080fd5b346101b1576020806003193601126101b1576001600160a01b0361008561066c565b166000526066815260406000209060ff82541691600190600282820154910160405180936000908354936100b885610682565b9485855288838216918260001461018f575050600114610150575b50506100e69250959394929503846106bc565b6040519384921515835281830152606060408301528251928360608401526000915b84831061013757505091806080931161012a575b601f01601f19168101030190f35b600083828401015261011c565b8183018101518684016080015285935091820191610108565b87925060005281600020906000915b8583106101775750506100e6935082010138806100d3565b8054838901850152879450889390920191810161015f565b92509350506100e694915060ff191682840152151560051b82010138806100d3565b600080fd5b346101b15760003660031901126101b1576101cf610766565b80610213575b6101db57005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b61010061ff001960005416176000556101d5565b346101b15760403660031901126101b15767ffffffffffffffff8135116101b15736602382350112156101b15767ffffffffffffffff8135820135116101b15760249036813580830135018301116101b1578135906001600160a01b0380831683036101b1576102956107a6565b81807f0000000000000000000000000000000000000000000000000000000000000000169116036105605781358201351561051d57808316600052606660205260ff604060002054166104c457606554916040516060810181811067ffffffffffffffff8211176104b05790600291604052600181526020810185815260405194601f199761033060208a601f89358a0135011601886106bc565b853580870135808952908b016020890137600060208735880135890101526040840196875216600052606660205260406000209151151560ff801984541691161782555160018201550191519485519167ffffffffffffffff831161049d57505061039b8254610682565b94601f8611610455575b602095508594601f83116001146103f5575093819293946000926103ea575b50508160011b916000199060031b1c19161790555b600160655401606555604051908152f35b0151905085806103c4565b82169483600052866000209160005b87811061043e575083600195969710610425575b505050811b0190556103d9565b015160001960f88460031b161c19169055858080610418565b919288600181928685015181550194019201610404565b826000526020600020601f830160051c81019660208410610493575b601f0160051c01955b86811061048757506103a5565b6000815560010161047a565b9096508690610471565b604190634e487b7160e01b600052526000fd5b86604184634e487b7160e01b600052526000fd5b60405162461bcd60e51b8152602081840152602d818601527f41207573657220697320616c7265616479207265676973746572656420746f2060448201526c3a3434b99030b2323932b9b99760991b6064820152608490fd5b60405162461bcd60e51b81526020818401819052818601527f50726f66696c65205552492073686f756c64206e6f7420626520656d7074792e6044820152606490fd5b60405162461bcd60e51b8152602081840152601e818601527f43616e206f6e6c792062652063616c6c656420627920726567697374727900006044820152606490fd5b346101b15760203660031901126101b15760206105be61066c565b604051906001600160a01b03807f0000000000000000000000000000000000000000000000000000000000000000169116148152f35b346101b15760203660031901126101b1576001600160a01b0361061561066c565b166000526066602052602060ff604060002054166040519015158152f35b346101b15760203660031901126101b1576020906001600160a01b0361065761066c565b16600052606682526001604060002001548152f35b600435906001600160a01b03821682036101b157565b90600182811c921680156106b2575b602083101461069c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610691565b90601f8019910116810190811067ffffffffffffffff8211176106de57604052565b634e487b7160e01b600052604160045260246000fd5b156106fb57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b60005460ff8160081c166000146107885750610783303b156106f4565b600090565b80610799600160ff819416106106f4565b60ff191617600055600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036107e25736601319013560601c90565b339056fea2646970667358221220845c430b40d01e78a1b3a2a583997db9a1d72d1f8e3324079acce9f3c976577364736f6c634300080f0033";

type UserManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserManager__factory extends ContractFactory {
  constructor(...args: UserManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    unicoinRegistry: PromiseOrValue<string>,
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserManager> {
    return super.deploy(
      unicoinRegistry,
      trustedForwarder,
      overrides || {}
    ) as Promise<UserManager>;
  }
  override getDeployTransaction(
    unicoinRegistry: PromiseOrValue<string>,
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      unicoinRegistry,
      trustedForwarder,
      overrides || {}
    );
  }
  override attach(address: string): UserManager {
    return super.attach(address) as UserManager;
  }
  override connect(signer: Signer): UserManager__factory {
    return super.connect(signer) as UserManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserManagerInterface {
    return new utils.Interface(_abi) as UserManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserManager {
    return new Contract(address, _abi, signerOrProvider) as UserManager;
  }
}
