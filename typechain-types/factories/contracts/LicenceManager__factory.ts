/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LicenceManager,
  LicenceManagerInterface,
} from "../../contracts/LicenceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicoinRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licenceId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_oldOwnerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwnerAddress",
        type: "address",
      },
    ],
    name: "allocateLicenceToNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licenceId",
        type: "uint256",
      },
    ],
    name: "getLicence",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicationLicenceNo",
            type: "uint256",
          },
          {
            internalType: "enum SharedStructures.LicenceStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructures.Licence",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getLicenceForUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licenceId",
        type: "uint256",
      },
    ],
    name: "getLicenceOwnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "getMostRecentPublicationLicence",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "getPublicationLicences",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "licenceOwners",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "licences",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "publicationLicenceNo",
        type: "uint256",
      },
      {
        internalType: "enum SharedStructures.LicenceStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publicationLicences",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_publicationLicenceNo",
        type: "uint256",
      },
    ],
    name: "registerNewLicence",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licenceId",
        type: "uint256",
      },
    ],
    name: "revokeLicence",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0346200010057601f6200265c38819003918201601f19168301916001600160401b038311848410176200010557808492604094855283398101031262000100576200005a602062000052836200011b565b92016200011b565b6080526200006762000194565b9081620000eb575b60a052620000af575b6040516124829081620001da8239608051818181610c6b0152612152015260a05181818161061e015281816106a0015261072f0152f35b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a162000078565b61010061ff001960005416176000556200006f565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200010057565b156200013857565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60005460ff8160081c16600014620001b95750620001b4303b1562000130565b600090565b80620001cc600160ff8194161062000130565b60ff19161760005560019056fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461021b57806306fdde0314610212578063081812fc14610209578063095ea7b31461020057806323b872dd146101f75780632cedebee146101ee57806334c6a0a0146101e55780633a7ae75d146101dc5780633fe48155146101d357806342842e0e146101ca5780634cd54184146101c15780634cd88b76146101b8578063572b6c05146101af5780636352211e146101a657806370a082311461019d5780638fc837741461019457806395d89b411461018b5780639fabd4a414610182578063a22cb46514610179578063b88d4fde14610170578063bb44aee314610167578063c87b56dd1461015e578063d1d9f95c14610155578063d628d5401461014c578063e985e9c5146101435763fbd9d2eb1461013b57600080fd5b61000e611337565b5061000e6112d4565b5061000e61129a565b5061000e611215565b5061000e6110da565b5061000e611070565b5061000e610fc7565b5061000e610ec2565b5061000e610e90565b5061000e610de8565b5061000e610d91565b5061000e610cb1565b5061000e610c92565b5061000e610c40565b5061000e610a73565b5061000e6108d0565b5061000e6108a7565b5061000e610707565b5061000e610670565b5061000e6105d1565b5061000e610542565b5061000e6104b2565b5061000e610455565b5061000e6103f9565b5061000e610313565b5061000e610236565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561025681610224565b63ffffffff60e01b166380ac58cd60e01b8114908115610294575b8115610283575b506040519015158152f35b6301ffc9a760e01b14905038610278565b635b5e139f60e01b81149150610271565b918091926000905b8282106102c55750116102be575050565b6000910152565b915080602091830151818601520182916102ad565b906020916102f3815180928185528580860191016102a5565b601f01601f1916010190565b9060206103109281815201906102da565b90565b503461000e576000806003193601126103f657604051908060655461033781611419565b808552916001918083169081156103cc5750600114610371575b61036d85610361818703826109d4565b604051918291826102ff565b0390f35b9250606583527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c75b8284106103b45750505081016020016103618261036d610351565b80546020858701810191909152909301928101610399565b86955061036d9693506020925061036194915060ff191682840152151560051b8201019293610351565b80fd5b503461000e57602036600319011261000e5760206104186004356115de565b6001600160a01b0360405191168152f35b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b503461000e57604036600319011261000e5761047b610472610429565b6024359061149c565b005b606090600319011261000e576001600160a01b0390600435828116810361000e5791602435908116810361000e579060443590565b503461000e5761047b6104c43661047d565b916104de6104d9846104d461214f565b611779565b611677565b611932565b9060028210156104f05752565b634e487b7160e01b600052602160045260246000fd5b6105409092919260608060808301956001600160a01b038151168452602081015160208501526040810151604085015201519101906104e3565b565b503461000e57602036600319011261000e57600060606040516105648161098f565b828152826020820152826040820152015261036d610583600435611028565b506105c560ff6003604051936105988561098f565b6001600160a01b0381541685526001810154602086015260028101546040860152015416606083016121db565b60405191829182610506565b503461000e57606036600319011261000e576004356105ee61043f565b906044356001600160a01b0392838216820361000e576104de6104d98461047b9661064761061a61214f565b91807f0000000000000000000000000000000000000000000000000000000000000000169083161461218f565b6104d48661065484611028565b50906001600160a01b03166001600160a01b0319825416179055565b503461000e57602036600319011261000e5760026106e56004356106c861069561214f565b6001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001691161461218f565b60036106d382611028565b5001805460ff19166001179055611028565b50018054600181106106fa575b600019019055005b6107026118c9565b6106f2565b503461000e57606036600319011261000e57610721610429565b60243561072c61214f565b917f0000000000000000000000000000000000000000000000000000000000000000926107676001600160a01b03918280871691161461218f565b6040516107738161098f565b81831681526020810184815260408201604435815260608301916000948584526107b760c9546801000000000000000081101561089a575b6001810160c955611028565b959095610886575185546001600160a01b0319166001600160a01b039190921616178455516001840155516002830155519160028310156108725761036d6108586108626108438961085d8a8a6108118b60038c016121e7565b61081c60c9546118e0565b96878096819461084883610843876001600160a01b031660005260ca602052604060002090565b6121ff565b60005260cb602052604060002090565b612249565b61149c565b6040519081529081906020820190565b634e487b7160e01b81526021600452602490fd5b634e487b7160e01b87526004879052602487fd5b6108a2610978565b6107ab565b503461000e5761047b6108b93661047d565b90604051926108c7846109b8565b600084526116e9565b503461000e5760208060031936011261000e57600435908160005260cb81526040600020604051918281835491828152019260005281600020916000905b8282106109615761036d6109508861094a61094461093f8b610932818d03826109d4565b51936108488515156123de565b61238f565b916118e0565b9061242a565b516040519081529081906020820190565b83548552938401936001938401939091019061090e565b50634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176109ab57604052565b6109b3610978565b604052565b6020810190811067ffffffffffffffff8211176109ab57604052565b90601f8019910116810190811067ffffffffffffffff8211176109ab57604052565b60209067ffffffffffffffff8111610a14575b601f01601f19160190565b610a1c610978565b610a09565b929192610a2d826109f6565b91610a3b60405193846109d4565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e5781602061031093359101610a21565b503461000e57604036600319011261000e5767ffffffffffffffff60043581811161000e57610aa6903690600401610a58565b60243582811161000e57610abe903690600401610a58565b610ac6611ed5565b9283610c2c575b610ae760ff60005460081c16610ae281611f15565b611f15565b8251908111610c1f575b610b0581610b00606554611419565b611f75565b602080601f8311600114610b8c57508190610b3c94600092610b81575b50508160011b916000199060031b1c191617606555612057565b610b4257005b610b5261ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b015190503880610b22565b919293601f198416610bc060656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c790565b936000905b828210610c07575050916001939185610b3c97969410610bee575b505050811b01606555612057565b015160001960f88460031b161c19169055388080610be0565b80600186978294978701518155019601940190610bc5565b610c27610978565b610af1565b61010061ff00196000541617600055610acd565b503461000e57602036600319011261000e576020610c5c610429565b604051906001600160a01b03807f0000000000000000000000000000000000000000000000000000000000000000169116148152f35b503461000e57602036600319011261000e5760206104186004356113a2565b503461000e57602036600319011261000e576001600160a01b03610cd3610429565b168015610cfc57600052606860205261036d604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b50634e487b7160e01b600052603260045260246000fd5b8054821015610d84575b60005260206000200190600090565b610d8c610d54565b610d75565b503461000e57604036600319011261000e57610dab610429565b6001600160a01b03602435911660005260ca6020526040600020805482101561000e57602091610dda91610d6b565b90546040519160031b1c8152f35b503461000e576000806003193601126103f6576040519080606654610e0c81611419565b808552916001918083169081156103cc5750600114610e355761036d85610361818703826109d4565b9250606683527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943545b828410610e785750505081016020016103618261036d610351565b80546020858701810191909152909301928101610e5d565b503461000e57602036600319011261000e5760206001600160a01b03610eb7600435611028565b505416604051908152f35b503461000e57604036600319011261000e57610edc610429565b60243590811515820361000e57610ef161214f565b916001600160a01b03808316931691838314610f825781610f6b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610f5a610f7d9487600052606a6020526040600020906001600160a01b0316600052602052604060002090565b9060ff801983541691151516179055565b60405190151581529081906020820190565b0390a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b503461000e57608036600319011261000e57610fe1610429565b610fe961043f565b6064359167ffffffffffffffff831161000e573660238401121561000e5761101e61047b933690602481600401359101610a21565b91604435916116e9565b60c954811015611063575b60c960005260021b7f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d280190600090565b61106b610d54565b611033565b503461000e57602036600319011261000e5760043560c95481101561000e5761109a608091611028565b506110d86001600160a01b038254169160018101549060ff6003600283015492015416916040519485526020850152604084015260608301906104e3565bf35b503461000e57602036600319011261000e5760043561110f8160005260676020526001600160a01b0360406000205416151590565b1561116f5761111c611453565b80511561115d576103616111499161114f61113961036d95611d74565b6040519485936020850190611485565b90611485565b03601f1981018352826109d4565b505061036d61116a611453565b610361565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608490fd5b6020908160408183019282815285518094520193019160005b828110611201575050505090565b8351855293810193928101926001016111f3565b503461000e5760208060031936011261000e576001600160a01b03611238610429565b1660005260ca8152604060002090604051908181845491828152019360005281600020916000905b8282106112835761036d85611277818903826109d4565b604051918291826111da565b835486529485019460019384019390910190611260565b503461000e57604036600319011261000e5760243560043560005260cb6020526040600020805482101561000e57602091610dda91610d6b565b503461000e57604036600319011261000e57602060ff61132b6112f5610429565b6001600160a01b0361130561043f565b9116600052606a84526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b503461000e5760208060031936011261000e5760043560005260cb8152604060002090604051908181845491828152019360005281600020916000905b82821061138b5761036d85611277818903826109d4565b835486529485019460019384019390910190611374565b60005260676020526001600160a01b036040600020541680156113c25790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b90600182811c92168015611449575b602083101461143357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611428565b604051906020820182811067ffffffffffffffff821117611478575b60405260008252565b611480610978565b61146f565b90611498602092828151948592016102a5565b0190565b906114a6816113a2565b6001600160a01b03808216808286161461158f576114c261214f565b91821614918215611549575b5050156114de5761054091611ac0565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b60ff92509061156e611586926001600160a01b0316600052606a602052604060002090565b906001600160a01b0316600052602052604060002090565b541638806114ce565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b6115fe8160005260676020526001600160a01b0360406000205416151590565b1561161d5760005260696020526001600160a01b036040600020541690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561167e57565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608490fd5b916105409391611712936117026104d9846104d461214f565b61170d838383611932565b611cd6565b1561171957565b60405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b6117998260005260676020526001600160a01b0360406000205416151590565b15611817576117a7826113a2565b916001600160a01b03908183169282851684149485156117e7575b505083156117d1575b50505090565b6117dd919293506115de565b16143880806117cb565b60ff9295509061156e61180d926001600160a01b0316600052606a602052604060002090565b54169238806117c2565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561187857565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b50634e487b7160e01b600052601160045260246000fd5b600181106118f0575b6000190190565b6118f86118c9565b6118e9565b600190600119811161190d570190565b6114986118c9565b8019603011611925575b60300190565b61192d6118c9565b61191f565b9061193c836113a2565b6001600160a01b039182918285169384911603611a175761198a6119ee92821694611968861515611871565b61197187611a6a565b6001600160a01b03166000526068602052604060002090565b61199481546118e0565b90556119b3816001600160a01b03166000526068602052604060002090565b6119bd81546118fd565b90556119d3856000526067602052604060002090565b906001600160a01b03166001600160a01b0319825416179055565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b600081815260696020526040812080546001600160a01b03191690556001600160a01b03611a97836113a2565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92582604051a4565b600082815260696020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b0380611af9846113a2565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256000604051a4565b9081602091031261000e575161031081610224565b61031093926001600160a01b0360809316825260006020830152604082015281606082015201906102da565b909261031094936080936001600160a01b038092168452166020830152604082015281606082015201906102da565b3d15611bc1573d90611ba7826109f6565b91611bb560405193846109d4565b82523d6000602084013e565b606090565b909190803b15611cce57611c0891602091611bdf61214f565b9460006001600160a01b03604051809781968295630a85bd0160e11b9b8c855260048501611b3b565b0393165af160009181611c9e575b50611c9057611c23611b96565b80519081611c8b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b602001fd5b6001600160e01b0319161490565b611cc091925060203d8111611cc7575b611cb881836109d4565b810190611b26565b9038611c16565b503d611cae565b505050600190565b92909190823b15611d1a57611c089260209260006001600160a01b03611cfa61214f565b9760405197889687958693630a85bd0160e11b9c8d865260048601611b67565b50505050600190565b90611d2d826109f6565b611d3a60405191826109d4565b8281528092611d4b601f19916109f6565b0190602036910137565b906020918051821015611d6757010190565b611d6f610d54565b010190565b8015611e26576000818181805b611dfc5750611d8f81611d23565b935b611d9b5750505090565b611da4906118e0565b90600a90611de7611dbf611db9848406611915565b60ff1690565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001690565b841a611df38487611d55565b53049081611d91565b91506001600a916000198114611e19575b01910480849291611d81565b611e216118c9565b611e0d565b506040516040810181811067ffffffffffffffff821117611e56575b60405260018152600360fc1b602082015290565b611e5e610978565b611e42565b15611e6a57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b60005460ff8160081c16600014611ef75750611ef2303b15611e63565b600090565b80611f08600160ff81941610611e63565b60ff191617600055600190565b15611f1c57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b601f8111611f81575050565b600090606582527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c7906020601f850160051c83019410611fdc575b601f0160051c01915b828110611fd157505050565b818155600101611fc5565b9092508290611fbc565b601f8111611ff2575050565b600090606682527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354906020601f850160051c8301941061204d575b601f0160051c01915b82811061204257505050565b818155600101612036565b909250829061202d565b90815167ffffffffffffffff8111612142575b61207e81612079606654611419565b611fe6565b602080601f83116001146120ba57508192936000926120af575b50508160011b916000199060031b1c191617606655565b015190503880612098565b90601f198316946120ed60666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435490565b926000905b87821061212a575050836001959610612111575b505050811b01606655565b015160001960f88460031b161c19169055388080612106565b806001859682949686015181550195019301906120f2565b61214a610978565b61206a565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03160361218b5736601319013560601c90565b3390565b1561219657565b60405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920726567697374727900006044820152606490fd5b60028210156104f05752565b9060028110156104f05760ff80198354169116179055565b8054612222916801000000000000000082101561223c575b600182018155610d6b565b819291549060031b600019811b9283911b16911916179055565b612244610978565b612217565b90604051612256816109b8565b600081526001600160a01b03831691821561234b5761228b8160005260676020526001600160a01b0360406000205416151590565b612306578381611712946122b5610540976001600160a01b03166000526068602052604060002090565b6122bf81546118fd565b90556122d9836119d3846000526067602052604060002090565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef81604051a4611bc6565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b9060405191828154918282526020928383019160005283600020936000905b8282106123c457505050610540925003836109d4565b8554845260019586019588955093810193909101906123ae565b156123e557565b60405162461bcd60e51b815260206004820152601160248201527f6e6f206c6963656e63657320666f756e640000000000000000000000000000006044820152606490fd5b602091815181101561243f575b60051b010190565b612447610d54565b61243756fea2646970667358221220eeea5e80cb6cd67f7c577600709fe54c2e422ebe9bf5a1214316bf02b53f35c764736f6c634300080f0033";

type LicenceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LicenceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LicenceManager__factory extends ContractFactory {
  constructor(...args: LicenceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    unicoinRegistry: PromiseOrValue<string>,
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LicenceManager> {
    return super.deploy(
      unicoinRegistry,
      trustedForwarder,
      overrides || {}
    ) as Promise<LicenceManager>;
  }
  override getDeployTransaction(
    unicoinRegistry: PromiseOrValue<string>,
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      unicoinRegistry,
      trustedForwarder,
      overrides || {}
    );
  }
  override attach(address: string): LicenceManager {
    return super.attach(address) as LicenceManager;
  }
  override connect(signer: Signer): LicenceManager__factory {
    return super.connect(signer) as LicenceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LicenceManagerInterface {
    return new utils.Interface(_abi) as LicenceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LicenceManager {
    return new Contract(address, _abi, signerOrProvider) as LicenceManager;
  }
}
