/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HarbergerTaxManager,
  HarbergerTaxManagerInterface,
} from "../../contracts/HarbergerTaxManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
    ],
    name: "_updateTaxObjectLastPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_assignedValue",
        type: "uint256",
      },
    ],
    name: "_updateTaxObjectValuation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
    ],
    name: "calculateMinBuyOutPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
    ],
    name: "calculateOutstandingTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
    ],
    name: "capFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licenceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currentAssignedValue",
        type: "uint256",
      },
    ],
    name: "createTaxObject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_buyOutId",
        type: "uint256",
      },
    ],
    name: "finalizeBuyOutOffer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "N",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
    ],
    name: "futureValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_buyOutId",
        type: "uint256",
      },
    ],
    name: "getBuyOutLicenceId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_buyOutId",
        type: "uint256",
      },
    ],
    name: "getBuyOutOwnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_licenceId",
        type: "uint256",
      },
    ],
    name: "getLicenceTaxObjectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
    ],
    name: "getTaxObject",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "licenceId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ratePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPayment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfOutBids",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentAssignedValue",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "buyOuts",
            type: "uint256[]",
          },
          {
            internalType: "enum SharedStructures.TaxObjectStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructures.TaxObject",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTaxObjectLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "licenceTaxObjects",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
    ],
    name: "revokeTaxObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxObjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offer",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyOutOwnerAddress",
        type: "address",
      },
    ],
    name: "submitBuyOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c034620000f957601f6200188238819003918201601f19168301916001600160401b03831184841017620000fe578084926040948552833981010312620000f9576200005a6020620000528362000114565b920162000114565b608052620000676200018d565b9081620000e4575b60a052620000a8575b6040516116af9081620001d382396080518181816109000152610e6d015260a0518181816103710152610a3d0152f35b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a162000078565b61010061ff001960005416176000556200006f565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f957565b156200013157565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60005460ff8160081c16600014620001b25750620001ad303b1562000129565b600090565b80620001c5600160ff8194161062000129565b60ff19161760005560019056fe6040608081526004908136101561001557600080fd5b600091823560e01c90816321bd7594146109fc57816325c27472146109c957816338b36026146109a957816341107ff71461095e5781634142681314610929578163572b6c05146108d15781635859eec11461089e578163776c02481461057957816388b623c81461054d5781638a226e32146104e157816395050862146104ba578163b4c0bd9d14610412578163d78cd958146103de578163e1363b52146103a8578163e95b259014610341578163eb12cdc31461017e578163f26bb2f21461010a575063fd8446e9146100e957600080fd5b346101065781600319360112610106576020906065549051908152f35b5080fd5b82843461017b57608036600319011261017b5750670de0b6b3a764000061017360209361016b61016667d02ab486cedc000061016061015b610150604435606435610d57565b953595602435610e1b565b610de5565b046110b2565b610dfe565b607f1c610e1b565b049051908152f35b80fd5b82843461017b576020908160031936011261017b578060c084516101a181610db3565b82815282858201528286820152826060820152826080820152606060a082015201526101cd8435610d78565b509280516101da81610db3565b84548152600190818601549585820196875260028101548483019081526003820154606084019081528983015491608085019283526005840193875194858b82549182815201918b528b8b20908c8a8d915b83831061032d575050505050859003601f01601f1916850167ffffffffffffffff81118682101761031a57885260a086019485526006015460c08601979060ff16600281101561030757889a97969a5280519a878c526101008c019a51888d015251908b01525160608a01525160808901525160a0880152519460e060c08801528551809152826101208801960192855b8281106102f4575050505050519060028210156102e1575082935060e08301520390f35b634e487b7160e01b815260218552602490fd5b84518852968101969381019383016102bd565b634e487b7160e01b8a5260218d5260248afd5b634e487b7160e01b8a5260418d5260248afd5b845486529094019392830192018a8e61022c565b82843461017b57602036600319011261017b575061039f602092610399610366610e6a565b6001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016911614610d0b565b35610f19565b90519015158152f35b9050346103da5760203660031901126103da576103d0906103ca610366610e6a565b35610d78565b5060024291015551f35b8280fd5b9050346103da5760203660031901126103da576104026006916103ca610366610e6a565b5001805460ff1916600117905551f35b9050823461017b57602036600319011261017b5781358082526067602052838220549260018410610467576020856104598682878781526067865220906000190190610cdd565b91905490519160031b1c8152f35b608490602086519162461bcd60e51b8352820152602760248201527f5468657265206973206e6f20746178206f626a65637420666f722074686973206044820152666c6963656e636560c81b6064820152fd5b82843461017b57602036600319011261017b57506104da602092356110b2565b9051908152f35b82843461017b57602036600319011261017b57506104da61015b670de0b6b3a76400006105478561016b61016667d02ab486cedc000061016061052660209b35610d78565b50948501549785610541600260018c99015492015442610d57565b90610e1b565b04610d57565b9050346103da576105739061056136610cc2565b929061056e610366610e6a565b610d78565b50015551f35b8383346101065761058936610cc2565b610594610366610e6a565b801561085057818452602094606786528385205461077e575b83519186830183811067ffffffffffffffff82111761076b57855285835284516105d681610db3565b84815287810164046e07d0f681528682019442865260608301938985526080840190815260a0840191825260c08401948a8652606554976801000000000000000094858a10156107585761063160019a8b8101606555610d78565b97909761074657518755518987015551600286015551600385015551858401556005830190518051928311610733578a908254848455808510610709575b5001908952898920868b8b935b8585106106f357505050505050600601905160028110156106e05760ff801983541691161790556065549182106106cd575090826106c7926000190194859281526067875220610e2e565b51908152f35b634e487b7160e01b855260119052602484fd5b634e487b7160e01b875260218352602487fd5b90818392518555019201920191908b889161067c565b8885848e8781522092830192015b82811061072557505061066f565b8d81558e94508a9101610717565b634e487b7160e01b8a526041865260248afd5b634e487b7160e01b8e528d8a5260248efd5b634e487b7160e01b8d526041895260248dfd5b634e487b7160e01b875260418352602487fd5b83852080546001811061083d576107ad6107a160ff936006936000190190610cdd565b90549060031b1c610d78565b50015416600281101561082a576001146105ad57835162461bcd60e51b8152908101869052602e60248201527f43616e206f6e6c792063726561746520746178206f626a65637420696620707260448201527f6576696f7573207265766f6b65640000000000000000000000000000000000006064820152608490fd5b634e487b7160e01b865260218252602486fd5b634e487b7160e01b875260118352602487fd5b825162461bcd60e51b8152602081870152602260248201527f56616c7565206e6565647320746f206265206c6172676572207468616e207a65604482015261726f60f01b6064820152608490fd5b82843461017b57602036600319011261017b57506108c86108c160209335610ede565b5054610d78565b50549051908152f35b9050346103da5760203660031901126103da57356001600160a01b0391828216809203610925576020935051917f000000000000000000000000000000000000000000000000000000000000000016148152f35b8380fd5b82843461017b57602036600319011261017b57506001600160a01b03600161095360209435610ede565b500154169051908152f35b82843461017b57606036600319011261017b575061099f61016667d02ab486cedc000061016061015b602096610998602435604435610d57565b9035610e1b565b607f1c9051908152f35b82843461017b57602036600319011261017b57506104da60209235610eb6565b505034610106576109d936610cc2565b92908152606760205281812090815484101561017b575060209261045991610cdd565b83915034610106576060366003190112610106578035916024906001600160a01b0382356044358281169081900361092557610a64610a39610e6a565b84167f0000000000000000000000000000000000000000000000000000000000000000851614610d0b565b610a6d87610eb6565b8210610c5a5760ff6006610a8089610d78565b500154166002811015610c4857610be057620d2f00194211610bcd5787519160a0830183811067ffffffffffffffff821117610bbb578952878352602083019182528883019081526060830191620d2f0042018352608084019486865260665468010000000000000000811015610ba957806001610b019201606655610ede565b959095610b985790899594939291518555600185019151166001600160a01b03198254161790555160028301555160038201550190516003811015610b865760ff801983541691161790556066549260018410610b765760206000198501876106c7826005610b6f8b610d78565b5001610e2e565b634e487b7160e01b825260119052fd5b5050634e487b7160e01b815260218352fd5b634e487b7160e01b8852878a528888fd5b634e487b7160e01b885260418a528888fd5b634e487b7160e01b8652604188528686fd5b5050634e487b7160e01b82525060118352fd5b875162461bcd60e51b81526020818801526037818701527f43616e206f6e6c79207375626d69742061206275794f757420746f20616e206160448201527f63746976652061637469766520746178206f626a6563740000000000000000006064820152608490fd5b634e487b7160e01b8552602187528585fd5b875162461bcd60e51b81526020818801526030818701527f56616c75652073656e74206973206c657373207468616e20746865206d696e6960448201527f6d756d206275794f7574207072696365000000000000000000000000000000006064820152608490fd5b6040906003190112610cd8576004359060243590565b600080fd5b8054821015610cf55760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b15610d1257565b60405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920726567697374727900006044820152606490fd5b818110610d62570390565b634e487b7160e01b600052601160045260246000fd5b606554811015610cf5576007906065600052027f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70190600090565b60e0810190811067ffffffffffffffff821117610dcf57604052565b634e487b7160e01b600052604160045260246000fd5b80600019046001607f1b1181151516610d6257607f1b90565b670de0b6b3a7640000908060001904821181151516610d62570290565b8060001904821181151516610d62570290565b805468010000000000000000811015610dcf57610e5091600182018155610cdd565b819291549060031b600019811b9283911b16911916179055565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610ea65736601319013560601c90565b3390565b81198111610d62570190565b610ec1600491610d78565b500154806000190460691181151516610d62576069606491020490565b606654811015610cf5576005906066600052027f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540190600090565b610f2290610ede565b5090600491828101805460ff8116600381101561109d57611043576003830154421115610fd957600283015491835491610f5b83610eb6565b8410610fc75750805460ff191660011790558490610f7890610d78565b5001556003610f878254610d78565b50018054936001198511610fb257506001610fa6939401905554610d78565b50600242910155600190565b601190634e487b7160e01b6000525260246000fd5b60ff1916600217905550600093505050565b60405162461bcd60e51b8152602081870152603a60248201527f63616e206f6e6c792066696e616c697a65206275794f7574206966206974206960448201527f732070617374207468652065787069726174696f6e2074696d650000000000006064820152608490fd5b60405162461bcd60e51b8152602081870152602d60248201527f43616e206f6e6c792066696e616c697a65206275794f7574206966206275794f60448201526c75742069732070656e64696e6760981b6064820152608490fd5b602186634e487b7160e01b6000525260246000fd5b6000906f0fffffffffffffffffffffffffffffff8116906110d38280610e1b565b60001992906710e1b3be415a000090607f90811c80151581870484111661163d576110fe8482610e1b565b821c926705a0913f6b1e00008488048111851515166116655761113092869261112a9287029102610eaa565b93610e1b565b811c91670168244fdac780008387048111841515166116515761112a61115a928692860290610eaa565b811c91664807432bc180008387048111841515166116515761112a611183928692860290610eaa565b811c91660c0135dca040008387048111841515166116515761112a6111ac928692860290610eaa565b811c916601b707b1cdc0008387048111841515166116515761112a6111d5928692860290610eaa565b811c916536e0f639b8008387048111841515166116515761112a6111fd928692860290610eaa565b811c91650618fee9f8008387048111841515166116515761112a611225928692860290610eaa565b811c91649c197dcc008387048111841515166116515761112a61124c928692860290610eaa565b811c91640e30dce4008387048111841515166116515761112a611273928692860290610eaa565b811c9164012ebd13008387048111841515166116515761112a61129a928692860290610eaa565b811c916317499f008387048111841515166116515761112a6112c0928692860290610eaa565b811c916301a9d4808387048111841515166116515761112a6112e6928692860290610eaa565b811c91621c63808387048111841515166116515761112a61130b928692860290610eaa565b811c916201c6388387048111841515166116515761112a611330928692860290610eaa565b811c91611ab88387048111841515166116515761112a611354928692860290610eaa565b811c9161017c8387048111841515166116515761112a611378928692860290610eaa565b811c918286046014118315151661163d578361112a61139b926014860290610eaa565b901c9081850460011182151516611629576113c36113c993926721c3677c82b4000092610eaa565b04610eaa565b926f8000000000000000000000000000000019841161161557506001607f1b809301926f1000000000000000000000000000000082166115da575b6f20000000000000000000000000000000821661159f575b6f400000000000000000000000000000008216611565575b811661152c575b70010000000000000000000000000000000081166114f3575b70020000000000000000000000000000000081166114ba575b70040000000000000000000000000000000016611488575090565b816e2bf84208204f5977f9a8cf01fdc3079104811182151516610d62576d03c6ab775dd0b95b4cbee7e65d1191020490565b916f0960aadc109e7a3bf4578099615711d790808304821181151516610d62576e2bf84208204f5977f9a8cf01fdce3d9102049161146d565b916f454aaa8efe072e7f6ddbab84b40a55c5818304811182151516610d62576f0960aadc109e7a3bf4578099615711ea91020491611454565b916fbc5ab1b16779be3575bd8f0520a9f21e818304811182151516610d62576f454aaa8efe072e7f6ddbab84b40a55c99102049161143b565b927001368b2fc6f9609fe7aceb46aa619baed5818404811182151516610d62576fbc5ab1b16779be3575bd8f0520a9f21f91020492611434565b9270018ebef9eac820ae8682b9793ac6d1e778818404811182151516610d62577001368b2fc6f9609fe7aceb46aa619baed49102049261141c565b927001c3d6a24ed82218787d624d3e5eba95f9818404811182151516610d625770018ebef9eac820ae8682b9793ac6d1e77691020492611404565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b89526011600452602489fdfea2646970667358221220c3dc6db82e2427e8261bcbd90ef548dc6ff7fc300ba07bd53081d50a5702b39e64736f6c634300080f0033";

type HarbergerTaxManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HarbergerTaxManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HarbergerTaxManager__factory extends ContractFactory {
  constructor(...args: HarbergerTaxManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    registry: PromiseOrValue<string>,
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HarbergerTaxManager> {
    return super.deploy(
      registry,
      trustedForwarder,
      overrides || {}
    ) as Promise<HarbergerTaxManager>;
  }
  override getDeployTransaction(
    registry: PromiseOrValue<string>,
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      registry,
      trustedForwarder,
      overrides || {}
    );
  }
  override attach(address: string): HarbergerTaxManager {
    return super.attach(address) as HarbergerTaxManager;
  }
  override connect(signer: Signer): HarbergerTaxManager__factory {
    return super.connect(signer) as HarbergerTaxManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HarbergerTaxManagerInterface {
    return new utils.Interface(_abi) as HarbergerTaxManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HarbergerTaxManager {
    return new Contract(address, _abi, signerOrProvider) as HarbergerTaxManager;
  }
}
