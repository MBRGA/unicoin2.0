/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAuctionManager,
  IAuctionManagerInterface,
} from "../../../contracts/interfaces/IAuctionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bidHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bidderAddress",
        type: "address",
      },
    ],
    name: "_commitSealedBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_auctionFloor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_auctionStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_auctionDuration",
        type: "uint256",
      },
    ],
    name: "_createAuction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "finalizeAuction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winningAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winnerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicationId",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructures.AuctionResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getAuction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionFloor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "auctionBidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "winningBidId",
            type: "uint256",
          },
          {
            internalType: "enum SharedStructures.AuctionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructures.Auction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getAuctionBids",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getAuctionStatus",
    outputs: [
      {
        internalType: "enum SharedStructures.AuctionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bidId",
        type: "uint256",
      },
    ],
    name: "getBid",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "commitBid",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "revealedBid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revealedSalt",
            type: "uint256",
          },
          {
            internalType: "enum SharedStructures.BidStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "publicationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidderAddress",
            type: "address",
          },
        ],
        internalType: "struct SharedStructures.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bidderAddress",
        type: "address",
      },
    ],
    name: "getBidderBids",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getNumberOfBidsInAuction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bidId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bidderAddress",
        type: "address",
      },
    ],
    name: "revealSealedBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newStartTime",
        type: "uint256",
      },
    ],
    name: "updateAuctionStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAuctionManager__factory {
  static readonly abi = _abi;
  static createInterface(): IAuctionManagerInterface {
    return new utils.Interface(_abi) as IAuctionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAuctionManager {
    return new Contract(address, _abi, signerOrProvider) as IAuctionManager;
  }
}
