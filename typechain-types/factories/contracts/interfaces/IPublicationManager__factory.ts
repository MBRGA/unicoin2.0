/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPublicationManager,
  IPublicationManagerInterface,
} from "../../../contracts/interfaces/IPublicationManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "GetPublicationPricingStrategy",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "_addAuctionToPublication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "_changeOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SharedStructures.PricingStrategy",
        name: "pricingStrategy",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "publicationUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fixedSellPrice",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "maxNumberOfLicences",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "weighting",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lifetimeAllocations",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructures.Contribution[]",
        name: "contributors",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "weighting",
            type: "uint16",
          },
        ],
        internalType: "struct SharedStructures.Citation[]",
        name: "citations",
        type: "tuple[]",
      },
    ],
    name: "_createPublication",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "_getContributors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "weighting",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lifetimeAllocations",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructures.Contribution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        internalType: "enum SharedStructures.PricingStrategy",
        name: "pricingStrategy",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "publicationUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fixedSellPrice",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "maxNumberOfLicences",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "weighting",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lifetimeAllocations",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructures.Contribution[]",
        name: "contributors",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "weighting",
            type: "uint16",
          },
        ],
        internalType: "struct SharedStructures.Citation[]",
        name: "citations",
        type: "tuple[]",
      },
    ],
    name: "_replacePublication",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "addNewLicenceToPublication",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_publisherAddress",
        type: "address",
      },
    ],
    name: "getAllPublications",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "getLatestAuctionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "getOwnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "getPublication",
    outputs: [
      {
        components: [
          {
            internalType: "enum SharedStructures.PricingStrategy",
            name: "pricingStrategy",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "publicationUri",
            type: "string",
          },
          {
            internalType: "enum SharedStructures.PublicationStatus",
            name: "publicationStatus",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellPrice",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "maxNumberOfLicences",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "licencesIssued",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "previousVersion",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "auctionIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "contributionsId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "donations",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "citationsId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lifetimeEarnings",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructures.Publication",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "getPublicationAuctions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPublicationLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_donationAmount",
        type: "uint256",
      },
    ],
    name: "recordDonation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
    ],
    name: "revokeLicence",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPublicationManager__factory {
  static readonly abi = _abi;
  static createInterface(): IPublicationManagerInterface {
    return new utils.Interface(_abi) as IPublicationManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPublicationManager {
    return new Contract(address, _abi, signerOrProvider) as IPublicationManager;
  }
}
